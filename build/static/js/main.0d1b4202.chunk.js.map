{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","TestSnippetDisplayPage/GistService.js","TestSnippetDisplayPage/GistActions.js","TestSnippetDisplayPage/GistReducer.js","TestSnippetDisplayPage/TestSnippetDisplayPageComponent.js","TestSnippetDisplayPage/TestSnippetDisplayPageContainer.js","Components/SnippetEditComponent.js","Components/SnippetDisplayComponent.js","Components/SnippetComponent.js","Containers/SnippetContainer.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","headers","fetch","response","json","fileUrl","text","GET_GISTS","GET_GIST","GET_FILE","initialState","gists","gist","file","gistReducer","state","action","type","gistfile","TestSnippetDisplayPageComponent","loginGithub","getGistsForUser","getGistById","getGistFile","onClick","map","index","id","owner","login","files","raw_url","connect","dispatch","UserService","SnippetEditComponent","htmlFor","placeholder","value","options","mode","theme","lineNumbers","onChange","editor","data","SnippetDisplayComponent","SnippetComponent","reducers","combineReducers","store","createStore","ReactDOM","render","TestSnippetDisplayPageContainer","username","SnippetContainer","document","getElementById"],"mappings":"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","file":"static/js/main.0d1b4202.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const url = \"https://github.com/login/oauth/authorize\"\r\nconst client_id =\"be6df06a30f90f7386f9\" //WC registered an OAuth app with github?\r\nconst redirect_uri = \"localhost:3000\"\r\nconst login = \"\"\r\nconst scope = \"gist\"\r\nconst state = \"thisisabadsatestring\"\r\n\r\nconst gistId = \"3ca80de89acfaac051414ac0c308359b\"\r\n\r\nconst username = \"group3person\"\r\nconst password = \"nicsalehwill3\"\r\n\r\nconst headers = {\r\n    \"Authorization\" : `Token 70f143af3d540e77de91e721e5c4e8960a181663`\r\n}\r\n\r\nexport const loginToGithub = () =>\r\n    fetch(`${url}?client_id=${client_id}&redirect_uri=${redirect_uri}&scope=${scope}&state=${state}`)\r\n        .then(response => response.json())\r\n\r\nexport const getGistsForUser = () =>\r\n    fetch(\"https://api.github.com/gists\",\r\n          {\"method\":\"GET\",\r\n          \"headers\": headers})\r\n        .then(response => response.json())\r\n\r\nexport const getGistById = () =>\r\n    fetch(`https://api.github.com/gists/${gistId}`,\r\n        {\"method\":\"GET\",\r\n            \"headers\": headers})\r\n        .then(response => response.json())\r\n\r\nexport const getGistFile = (fileUrl) =>\r\n    fetch(`${fileUrl}`,\r\n        // {\"method\":\"GET\",\r\n        //     \"headers\": headers}\r\n            )\r\n        .then(response => response.text())\r\n\r\n\r\nexport default {getGistsForUser, getGistById, getGistFile}","import UserService from \"./UserService\";\r\n\r\n// export const LOGIN_GITHUB = \"LOGIN_GITHUB\"\r\nexport const GET_GISTS = \"GET_GISTS\"\r\nexport const GET_GIST = \"GET_GIST\"\r\nexport const GET_FILE = \"GET_FILE\"\r\n\r\n// export const loginGithub = (dispatch) =>\r\n//     UserService.loginToGithub()\r\n//         .then(response => dispatch({type: LOGIN_GITHUB, response}))\r\n\r\nexport const getGistsForUser = (dispatch) =>\r\n    UserService.getGistsForUser()\r\n        .then(response => dispatch({type: GET_GISTS, response}))\r\n\r\nexport const getGistById = (dispatch) =>\r\n    UserService.getGistById()\r\n        .then(response => dispatch({type: GET_GIST, response}))\r\n\r\nexport const getGistFile = (dispatch, fileUrl) =>\r\n    UserService.getGistFile(fileUrl)\r\n    .then(gistfile => dispatch({type: GET_FILE, gistfile}))","import {GET_GISTS, GET_GIST, GET_FILE} from \"./UserActions\"\r\n\r\nconst initialState = {\r\n    gists: [],\r\n    gist: {},\r\n    file: \"\"\r\n}\r\n\r\nconst gistReducer = (state = initialState, action = action) => {\r\n    switch (action.type) {\r\n        // case LOGIN_GITHUB:\r\n        //     return {\r\n        //         ...state,\r\n        //         response: action.response\r\n        //     }\r\n        case GET_GISTS:\r\n            return {\r\n                ...state,\r\n                gists: action.response\r\n            }\r\n        case GET_GIST:\r\n            return {\r\n                ...state,\r\n                gist: action.response\r\n            }\r\n        case GET_FILE:\r\n            return {\r\n                ...state,\r\n                file: action.gistfile\r\n            }\r\n\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default gistReducer","import React from \"react\"\r\n\r\nconst TestSnippetDisplayPageComponent = ({loginGithub, getGistsForUser, getGistById, getGistFile, gists, gist, file}) =>\r\n    <div>\r\n        <h1>Show a list of snippets here!</h1>\r\n        <button onClick={getGistsForUser}>Get User Gists</button>\r\n        <ul>\r\n                {\r\n                        gists[0] &&\r\n                            gists.map((gist, index) =>\r\n                                <li>Gist Id: {gist.id} Owner: {gist.owner.login}</li>\r\n                            )\r\n\r\n                }\r\n        </ul>\r\n        <button onClick={getGistById}>Get One Gist</button>\r\n        <p>{!gist? \"nothing here\" : gist.id}</p>\r\n        <button onClick={() => getGistFile(gist.files[\"Private Gist Test 1\"].raw_url)}>Get Gist File</button>\r\n        <p>{!file? \"nothing here\" : file}</p>\r\n\r\n    </div>\r\n\r\nexport default TestSnippetDisplayPageComponent","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport {getGistsForUser, getGistById, getGistFile} from \"./UserActions\"\r\nimport TestSnippetDisplayPageComponent from \"./TestSnippetDisplayPageComponent\"\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    gists: state.gistReducer.gists,\r\n    gist: state.gistReducer.gist,\r\n    file: state.gistReducer.file\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    // loginGithub: () => loginGithub(dispatch),\r\n    getGistsForUser: () => getGistsForUser(dispatch),\r\n    getGistById: () => getGistById(dispatch),\r\n    getGistFile: (fileUrl) => getGistFile(dispatch, fileUrl)\r\n})\r\n\r\nexport default connect\r\n(stateToPropertyMapper, propertyToDispatchMapper)\r\n(TestSnippetDisplayPageComponent)","import React from \"react\"\r\nimport {UnControlled as CodeMirror} from 'react-codemirror2'\r\nimport \"../styles/codemirror.css\"\r\n\r\nconst SnippetEditComponent = () =>\r\n    <div>\r\n        <div>\r\n            <label htmlFor=\"snippet_title\" />\r\n            <input id=\"snippet_title\" placeholder=\"Title\"/>\r\n\r\n        </div>\r\n        <div>\r\n            <label htmlFor=\"code_editor\" />\r\n            {/*<textarea id=\"code_editor\" placeholder=\"Code goes here\"/>*/}\r\n            <CodeMirror\r\n                value='<h1>I ♥ react-codemirror2</h1>'\r\n                options={{\r\n                    mode: 'xml',\r\n                    theme: 'material',\r\n                    lineNumbers: true\r\n                }}\r\n                onChange={(editor, data, value) => {\r\n                }}\r\n            />\r\n        </div>\r\n        <div>\r\n            <label htmlFor=\"tag_input\" />\r\n            <input id=\"tag_input\" />\r\n        </div>\r\n        <button>Save</button>\r\n    </div>\r\n\r\nexport default SnippetEditComponent","import React from \"react\"\r\n\r\nconst SnippetDisplayComponent = () =>\r\n    <div>\r\n        <div>\r\n            <span>Snippet Title / <strong>Snippet Owner</strong></span>\r\n            <span>Timestamp</span>\r\n        </div>\r\n        <div>\r\n            <ol>\r\n                <li>\r\n                    <pre>Some code like a function() =>\r\n                           console.log(\"Hello, world!\");\r\n                           return \"Hello, world!\"\r\n                    </pre>\r\n                </li>\r\n                {/*<li>*/}\r\n                {/*    <pre>   console.log(\"Hello, world!\");</pre>*/}\r\n                {/*</li>*/}\r\n                {/*<li>*/}\r\n                {/*    <pre>   return \"Hello, world!\"</pre>*/}\r\n                {/*</li>*/}\r\n            </ol>\r\n        </div>\r\n        <div>\r\n            <ul>\r\n                <li>Tag1</li>\r\n                <li>Tag2</li>\r\n                <li>Tag3</li>\r\n                <li>Tag4</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n\r\nexport default SnippetDisplayComponent","import React from \"react\"\r\nimport SnippetEditComponent from \"./SnippetEditComponent\";\r\nimport SnippetDisplayComponent from \"./SnippetDisplayComponent\";\r\n\r\nconst SnippetComponent = () =>\r\n    <div>\r\n        <h2>Edit Component</h2>\r\n        <SnippetEditComponent/>\r\n        <h2>Display Component</h2>\r\n        <SnippetDisplayComponent/>\r\n    </div>\r\n\r\nexport default SnippetComponent\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport SnippetComponent from \"../Components/SnippetComponent\";\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n})\r\n\r\nexport default connect\r\n(stateToPropertyMapper, propertyToDispatchMapper)\r\n(SnippetComponent)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter, Link, Route} from 'react-router-dom'\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport gistReducer from \"./TestSnippetDisplayPage/UserReducer\";\r\nimport {Provider} from \"react-redux\"\r\nimport TestSnippetDisplayPageContainer from \"./TestSnippetDisplayPage/TestSnippetDisplayPageContainer\"\r\nimport SnippetContainer from \"./Containers/SnippetContainer\";\r\n\r\nconst reducers = combineReducers({\r\n    gistReducer\r\n})\r\n\r\nconst store = createStore(reducers)\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  //   <App />\r\n  // </React.StrictMode>\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <TestSnippetDisplayPageContainer username=\"NameOfUser\"/>\r\n            <SnippetContainer/>\r\n        </BrowserRouter>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}