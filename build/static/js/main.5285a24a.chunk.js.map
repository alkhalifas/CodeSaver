{"version":3,"sources":["Components/Search/SnippetSearchBarComponent.js","logo.svg","Components/TagComponent.js","Components/Snippets/SnippetEditComponent.js","config/db.js","Components/Snippets/SnippetDisplayComponent.js","Components/Snippets/SnippetComponent.js","services/snippetServices.js","Actions/SnippetActions.js","services/GistService.js","Actions/GistActions.js","Containers/SnippetContainer.js","Components/Search/SnippetSearchListComponent.js","Components/Search/SnippetSearchComponent.js","Containers/SnippetSearchContainer.js","Components/LoginComponent.js","reportWebVitals.js","App.js","Reducers/GistReducer.js","Reducers/snippetReducer.js","Components/NavbarComponent.js","Containers/NavbarContainer.js","Components/TestSnippetDisplayPageComponent.js","Containers/TestSnippetDisplayPageContainer.js","services/UserService.js","Actions/UserActions.js","Components/Users/UserProfileEditComponent.js","Components/Users/UserProfileComponent.js","Components/Users/UserSnippetsComponent.js","Containers/MySnippetsContainer.js","Containers/UserSnippetsContainer.js","Reducers/UserReducer.js","Containers/EditSnippetContainer.js","Containers/CreateSnippetContainer.js","Components/Users/UserAdminRowComponent.js","Components/Users/UserAdminListComponent.js","assets/media/laptop_food.png","assets/media/sample_snippet.PNG","assets/media/values_2.png","assets/media/timeline.png","Containers/LandingPageContainer.js","Components/StatisticsCounter.js","Containers/ImportGistContainer.js","Containers/RecommendedSnippetContainer.js","Components/PrivacyPolicyComponent.js","assets/media/people_computer_small.jpg","Components/Users/UserRegisterComponent.js","assets/media/people_computer_2_small.PNG","Components/Users/UserLoginComponent.js","Containers/FavoriteSnippetsContainer.js","Components/Users/UserProfileDisplayComponent.js","Containers/UserProfileEditContainer.js","Containers/UserProfileDisplayContainer.js","index.js"],"names":["SnippetSearchBarComponent","terms","updateSearchTerms","className","htmlFor","id","defaultValue","placeholder","onChange","event","target","value","type","to","aria-hidden","TagComponent","tag","edit","removeTagFromSnippet","onClick","require","fireUID","SnippetEditComponent","snippet","text","editLocalSnippet","editLocalText","updateSnippet","createSnippet","addTagToSnippet","createGistForUser","deleteSnippet","toggleLike","togglePrivacy","create","activeUser","title","likes","includes","username","console","log","dateCreated","description","language","codeText","options","mode","theme","lineNumbers","linewrapping","editor","data","document","getElementById","tags","map","index","checked","publicPost","_id","token","SnippetDisplayComponent","toggleRecommended","singleview","recommended","split","splice","line","href","creator","length","SnippetComponent","SNIPPET_NODE_URL_2","fetch","method","body","JSON","stringify","headers","then","response","json","newSnippet","snippetId","CREATE_SNIPPET","DELETE_SNIPPET","FIND_SNIPPET","EDIT_LOCAL_SNIPPET","ADD_TAG","REMOVE_TAG","EDIT_LOCAL_TEXT","UPDATE_TERMS","FIND_SNIPPETS","dispatch","snippetServices","createLocalSnippet","findSnippetById","gistId","fileUrl","content","GET_GISTS","CREATE_GIST","GET_GIST","GET_FILE","DELETE_GIST","UPDATE_GIST","getGistById","GistService","gist","getGistFile","gistfile","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","setPersistence","Auth","Persistence","LOCAL","onAuthStateChanged","user","uid","fireUser","currentUser","connect","React","Component","state","userReducer","likedSnippet","filter","push","SnippetSearchListComponent","snippets","SnippetSearchComponent","SnippetSearchContainer","this","props","match","params","searchSnippetsByTags","prevProps","prevState","snapshot","snippetReducer","LoginComponent","login","bind","handleChange","signup","name","email","password","paToken","e","preventDefault","signOut","alert","setState","signInWithEmailAndPassword","u","catch","error","createUserWithEmailAndPassword","database","ref","set","locked","class","for","aria-describedby","logout","style","marginLeft","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","gists","file","gistReducer","action","_","cloneDeep","NavbarComponent","data-toggle","data-target","aria-controls","aria-expanded","aria-label","fileName","TestSnippetDisplayPageComponent","loginGithub","getGistsForUser","owner","Object","keys","files","raw_url","a","Promise","resolve","once","userData","x","val","forEach","findAllUsers","values","getTokenForUser","updateUser","newUser","getUser","getAuth","getUserByUID","FIND_ALL_USERS","GET_USER","GET_USER_BY_UID","UPDATE_USER","UserService","users","UserProfileEditComponent","role","UserProfileComponent","UserSnippetsComponent","MySnippetsContainer","loadingWrapper","findSnippetsByCreator","render","displayedUser","UserReducer","EditSnippetContainer","currentSnippet","CreateSnippetContainer","newSnippetTemplate","lastModified","shareableURL","temp","UserAdminRowComponent","editing","newUserType","updateUserRow","UserAdminListComponent","lockUser","unlockUser","color","height","width","LandingPageContainer","findAllPublicSnippets","n","Date","y","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","currentTime","src","codePic","valuesCode","timeline","xmlns","fill","viewBox","fill-rule","d","ImportGistContainer","requested","importSnippetTemplate","gistContent","importGist","RecommendedSnippetContainer","findRecommendedSnippets","PrivacyPolicyComponent","UserRegisterComponent","registerPic","UserLoginComponent","loginPic","FavoriteSnippetsContainer","findFavoriteSnippets","UserProfileDisplayComponent","padding","UserProfileEditContainer","UserProfileDisplayContainer","reducers","combineReducers","GistReducer","store","createStore","ReactDOM","path","exact","component","SingleSnippetContainer"],"mappings":"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","file":"static/js/main.5285a24a.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst SnippetSearchBarComponent = ({terms, updateSearchTerms}) =>\r\n    <div className=\"row col-12\">\r\n        <div className=\"col-12 col-md-8\">\r\n            <div className=\"row mt-4\">\r\n                <label className=\"col-form-label d-none\" htmlFor=\"searchtags\">\r\n                    Search by Tag\r\n                </label>\r\n                <div className=\"input-group col-12\">\r\n                    <input\r\n                        id=\"searchtags\"\r\n                        className=\"form-control col-12\"\r\n                        defaultValue={`${!terms || terms === \"\" ? \"\" : terms}`}\r\n                        placeholder=\"Search by tags (eg: python+js+import)\"\r\n                        onChange={(event) => updateSearchTerms(event.target.value)}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <Link\r\n                            className=\"btn btn-outline-secondary\"\r\n                            type=\"button\"\r\n                            to={`/search${terms ? \"/\" + terms : \"\"}`}\r\n                        >\r\n                            Search\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"col-12 col-md-2 row mt-4 ml-1\">\r\n            <Link className=\"btn btn-primary float-right col-12\" to=\"/newsnippet\">\r\n                New <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"/>\r\n            </Link>\r\n        </div>\r\n        <div className=\"col-12 col-md-2 row mt-4 ml-1\">\r\n            <Link className=\"btn btn-secondary float-right col-12\" to=\"/import_gist\">\r\n                Import  <i className=\"fa fa-download\" aria-hidden=\"true\"/>\r\n            </Link>\r\n        </div>\r\n    </div>\r\n\r\nexport default SnippetSearchBarComponent\r\n","export default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";","import React from \"react\"\r\n\r\nconst TagComponent = ({tag, edit, removeTagFromSnippet}) =>\r\n    <div>\r\n        <span className=\"btn btn-primary ml-2\">\r\n            <h6 className=\"d-inline\">{tag}</h6>\r\n            {\r\n                edit === true &&\r\n                    <i className=\"fa fa-times-circle ml-2\" onClick={() => removeTagFromSnippet(tag)}/>\r\n            }\r\n        </span>\r\n    </div>\r\n\r\nexport default TagComponent;\r\n","import React from \"react\"\r\nimport \"../../styles/codemirror.css\";\r\nimport TagComponent from \"../TagComponent\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {UnControlled as CodeMirror} from 'react-codemirror2'\r\nrequire('codemirror/mode/htmlmixed/htmlmixed');\r\nrequire('codemirror/mode/css/css');\r\nrequire('codemirror/mode/javascript/javascript');\r\nrequire('codemirror/mode/clike/clike');\r\nrequire('codemirror/mode/python/python');\r\nrequire('codemirror/mode/sql/sql');\r\nrequire('codemirror/theme/neo.css');\r\n\r\nconst SnippetEditComponent = ({snippet, text, editLocalSnippet, editLocalText, updateSnippet, createSnippet, addTagToSnippet, removeTagFromSnippet, createGistForUser, deleteSnippet, toggleLike, togglePrivacy, edit, create, activeUser}) =>\r\n    <div className=\"card-body\">\r\n        {/*Title and Timestamp*/}\r\n        <div className=\"row col-12\">\r\n            <div className=\"col-12 col-md-8 input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                    <label className=\"input-group-text\" htmlFor=\"snippet_title\">Title:</label>\r\n                </div>\r\n                <input className=\"form-control\" id=\"snippet_title\"\r\n                       type=\"text\"\r\n                       placeholder={snippet.title}\r\n                       onChange={(event) => editLocalSnippet({\r\n                           ...snippet,\r\n                           title: event.target.value\r\n                       })}\r\n                />\r\n            </div>\r\n            <div className=\"col-12 col-lg-4 text-secondary\">\r\n                <div className=\"float-right\">\r\n                    {\r\n                        (!snippet.likes.includes(activeUser.username)) &&\r\n                            <button className=\"btn btn-outline-dark btn-like ml-2\" onClick={() => {\r\n                                console.log(\"In component User\", activeUser.username, \"liked snippet\", snippet);\r\n                                toggleLike(activeUser, snippet)\r\n                            }}>\r\n                                    <span className=\"fa-stack\">\r\n                                        <i className=\"fa fa-bookmark fa-stack-2x\" aria-hidden=\"true\"/>\r\n                                        <i className=\"fa fa-code fa-stack-1x text-white\" aria-hidden=\"true\"/>\r\n                                    </span>\r\n                            </button>\r\n                    }\r\n                    {\r\n                        (snippet.likes.includes(activeUser.username)) &&\r\n                            <button className=\"btn btn-dark btn-like ml-2\" onClick={() => {\r\n                                console.log(\"In component User\", activeUser.username, \"liked snippet\", snippet);\r\n                                toggleLike(activeUser, snippet)\r\n                            }}>\r\n                                    <span className=\"fa-stack\">\r\n                                        <i className=\"fa fa-bookmark fa-stack-2x\" aria-hidden=\"true\"/>\r\n                                        <i className=\"fa fa-code fa-stack-1x text-dark font-weight-bold\" aria-hidden=\"true\"/>\r\n                                    </span>\r\n                            </button>\r\n                    }\r\n                </div>\r\n                <div className=\"float-right mt-1\">\r\n                    <h6>Published: {snippet.dateCreated}</h6>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"col-12 mt-2\">\r\n            {/*Snippet Description*/}\r\n            <div className=\"row col-12 input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                    <label className=\"input-group-text\" htmlFor=\"snippet_description\">Description:</label>\r\n                </div>\r\n                <input className=\"form-control\" id=\"snippet_description\"\r\n                       placeholder={snippet.description}\r\n                       onChange={(event) => editLocalSnippet({\r\n                           ...snippet,\r\n                           description: event.target.value\r\n                       })}\r\n                />\r\n            </div>\r\n            {/*Snippet Content*/}\r\n            <div className=\"form-group row col-12 mt-2\">\r\n                <label htmlFor=\"selectLanguage\" className=\"d-none\">Set Language:</label>\r\n                <select\r\n                    onChange={(event) => editLocalSnippet({\r\n                        ...snippet,\r\n                        language: event.target.value\r\n                    })}\r\n                    value={snippet.language}\r\n                    className=\"form-control\" id=\"selectLanguage\"\r\n                >\r\n                    <option value=\"\">--Select language--</option>\r\n                    <option value=\"htmlmixed\">HTML</option>\r\n                    <option value=\"css\">CSS</option>\r\n                    <option value=\"javascript\">JavaScript</option>\r\n                    <option value=\"text/x-java\">Java</option>\r\n                    <option value=\"python\">Python</option>\r\n                    <option value=\"sql\">SQL</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"row col-12\">\r\n                <label htmlFor=\"code_editor\" />\r\n                {/*CodeMirror2*/}\r\n                <CodeMirror\r\n                    className=\"col-12 border\"\r\n                    value={snippet.codeText}\r\n                    options={{\r\n                        mode: `${snippet.language}`,\r\n                        theme: 'neo',\r\n                        lineNumbers: true,\r\n                        linewrapping: true\r\n                    }}\r\n                    onChange={(editor, data, value) => editLocalText(value)}\r\n                />\r\n            </div>\r\n        </div>\r\n        {/*Tags*/}\r\n        <div className=\"row col-12 mt-2\">\r\n            <div className=\"col-4 input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                    <label className=\"input-group-text\" htmlFor=\"tag_input\">Add tag:</label>\r\n                </div>\r\n                <input className=\"form-control\" id=\"tag_input\"/>\r\n                <div className=\"input-group-append\">\r\n                    <button\r\n                        className=\"btn btn-outline-secondary\"\r\n                        type=\"button\"\r\n                        onClick={\r\n                            () => {\r\n                                addTagToSnippet(document.getElementById(\"tag_input\").value);\r\n                                document.getElementById(\"tag_input\").value = \"\";\r\n                            }\r\n                        }>\r\n                        <i className=\"fa fa-plus\" aria-hidden=\"true\"/>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-8 text-secondary float-right\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"float-right\">\r\n                        <div className=\"tagBackground rounded row \">\r\n                            {\r\n                                (snippet.tags !== null && snippet.tags !== []) &&\r\n                                    snippet.tags.map((tag, index) =>\r\n                                        <TagComponent\r\n                                            key={index}\r\n                                            tag={tag}\r\n                                            edit={true}\r\n                                            removeTagFromSnippet={removeTagFromSnippet}\r\n                                        />\r\n                                    )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {/*Bottom buttons*/}\r\n        <div className=\"row col-12 mt-2\">\r\n            <div className=\"col-12\">\r\n                <div className=\"custom-control custom-switch d-inline col-2 ml-2\">\r\n                    <input type=\"checkbox\"\r\n                           className=\"custom-control-input mt-2\"\r\n                           id=\"publicprivate\"\r\n                           checked={snippet.publicPost}\r\n                           onChange={() => togglePrivacy(snippet)}\r\n                    />\r\n                    <label className=\"custom-control-label mt-2\" htmlFor=\"publicprivate\">\r\n                        {\r\n                            !snippet.publicPost &&\r\n                            <span>Private</span>\r\n                        }\r\n                        {\r\n                            snippet.publicPost &&\r\n                            <span>Public</span>\r\n                        }\r\n                    </label>\r\n                </div>\r\n\r\n                {\r\n                    edit &&\r\n                        <Link className=\"btn btn-outline-danger float-right col-12 col-md-1 ml-2\"\r\n                              to={\"/search\"}\r\n                              onClick={() => {\r\n                                  deleteSnippet(snippet._id)\r\n                              }}\r\n                        >\r\n                            <span title=\"Delete snippet\"><i className=\"fa fa-trash\" aria-hidden=\"true\"/></span>\r\n                        </Link>\r\n                }\r\n                <button className=\"btn btn-outline-dark float-right col-12 col-md-1 ml-2\"\r\n                        onClick={() => createGistForUser(activeUser.token, snippet.title, snippet.description, snippet.codeText)}\r\n                >\r\n                    <span title=\"Export to GitHub\"><i className=\"fa fa-upload\" aria-hidden=\"true\"/></span>\r\n                </button>\r\n                {\r\n                    edit &&\r\n                    <button className=\"btn btn-outline-info float-right col-12 col-md-2 ml-2\"\r\n                            onClick={() => {\r\n                                updateSnippet(snippet, text)\r\n                            }}\r\n                    >Save</button>\r\n                }\r\n                {\r\n                    create &&\r\n                    <Link className=\"btn btn-outline-info float-right col-12 col-md-2 ml-2\"\r\n                          to={\"/search\"}\r\n                          onClick={() => {\r\n                              createSnippet(snippet, text)\r\n                          }}\r\n                    >Create</Link>\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\nexport default SnippetEditComponent\r\n","\r\nimport firebase from 'firebase/app'\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\"\r\n\r\nlet config = {\r\n    apiKey: \"AIzaSyCxca_YXuGnWgCDtfjCftOmwVLdaDv8iRo\",\r\n    authDomain: \"codesnippetsaver.firebaseapp.com\",\r\n    databaseURL: \"https://codesnippetsaver.firebaseio.com\",\r\n    projectId: \"codesnippetsaver\",\r\n    storageBucket: \"codesnippetsaver.appspot.com\",\r\n    messagingSenderId: \"496491430565\",\r\n    appId: \"1:496491430565:web:64a31d0d34b85203ef434c\"\r\n};\r\n\r\nconst fire = firebase.initializeApp(config);\r\nfire.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL)\r\n\r\nexport let fireUID\r\n\r\nfirebase.auth().onAuthStateChanged((user) =>{\r\n    if(user){\r\n        fireUID = user.uid\r\n        console.log(fireUID)\r\n    }else{\r\n        console.log(\"user is null\")\r\n    }\r\n});\r\n\r\n\r\nexport const fireUser = firebase.auth().currentUser\r\n\r\nexport default fire\r\n","import React from \"react\"\r\nimport {Link} from \"react-router-dom\";\r\nimport TagComponent from \"../TagComponent\";\r\n\r\nconst SnippetDisplayComponent = ({snippet, toggleLike, toggleRecommended, activeUser, singleview}) =>\r\n    <div className=\"card-body shadow hoverDiv rounded\">\r\n        {/*Title and Timestamp*/}\r\n        <div className=\"row col-12\">\r\n            <div className=\"col-12 col-md-8\">\r\n                {snippet.recommended? <span className=\"mr-2\"><i className=\"fa fa-certificate pr-3`\" aria-hidden=\"true\"/></span> : null}\r\n                <Link to={`/snippet/${snippet._id}`} className=\"h5\">{snippet.title}</Link>\r\n            </div>\r\n            <div className=\"col-12 col-lg-4 text-secondary\">\r\n                <div className=\"float-right\">\r\n                    {\r\n                        (!snippet.likes.includes(activeUser.username)) &&\r\n                            <button className=\"btn btn-outline-dark btn-like ml-2\" onClick={() => {\r\n                                console.log(\"In component User\", activeUser.username, \"liked snippet\", snippet);\r\n                                toggleLike(activeUser, snippet)\r\n                            }}>\r\n                                <span className=\"fa-stack\">\r\n                                    <i className=\"fa fa-bookmark fa-stack-2x\" aria-hidden=\"true\"/>\r\n                                    <i className=\"fa fa-code fa-stack-1x text-white\" aria-hidden=\"true\"/>\r\n                                </span>\r\n                            </button>\r\n                    }\r\n                    {\r\n                        (snippet.likes.includes(activeUser.username)) &&\r\n                            <button className=\"btn btn-dark btn-like ml-2\" onClick={() => {\r\n                                console.log(\"In component User\", activeUser.username, \"liked snippet\", snippet);\r\n                                toggleLike(activeUser, snippet)\r\n                            }}>\r\n                                <span className=\"fa-stack\">\r\n                                    <i className=\"fa fa-bookmark fa-stack-2x\" aria-hidden=\"true\"/>\r\n                                    <i className=\"fa fa-code fa-stack-1x text-dark font-weight-bold\" aria-hidden=\"true\"/>\r\n                                </span>\r\n                            </button>\r\n                    }\r\n                </div>\r\n                <div className=\"float-right mt-1\">\r\n                    <h6>Published: {snippet.dateCreated}</h6>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {/*Snippet Description*/}\r\n        <div className=\"row col-12\">\r\n            <p className=\"col-12\">{snippet.description}</p>\r\n        </div>\r\n        {/*Snippet Content*/}\r\n        {\r\n            console.log(\"Displayed snippet:\", snippet)\r\n        }\r\n        <div className=\"p-3 col-12 mb-2\">\r\n            <pre className=\"col-12 pt-2 pb-2 border\">\r\n                {\r\n                    (singleview) &&\r\n                        <code className=\"all\">\r\n                            {snippet.codeText}\r\n                        </code>\r\n                }\r\n                {\r\n                    (!singleview && snippet.codeText) &&\r\n                        snippet.codeText.split(/\\r?\\n/).splice(0,5).map((line, index) =>\r\n                            <code key={index} className=\"some\">\r\n                                {line+\"\\n\"}\r\n                            </code>\r\n                        )\r\n                }\r\n            </pre>\r\n        </div>\r\n        <div className=\"col-12 mb-2\">\r\n            <Link to={`/snippet/${snippet._id}`} className={`${singleview ? \"d-none\" : \"\"}`}>More...</Link>\r\n            {/*TODO: Hide if user is not admin/mod*/}\r\n            {\r\n                snippet.recommended &&\r\n                    <button className={`btn btn-outline-secondary ${singleview ? \"\" : \"float-right\"}`}\r\n                            onClick={() => toggleRecommended(snippet)}>\r\n                        Recommend <i className=\"fa fa-certificate\" aria-hidden=\"true\"/>\r\n                    </button>\r\n            }\r\n            {\r\n                !snippet.recommended &&\r\n                    <button className={`btn btn-outline-secondary ${singleview ? \"\" : \"float-right\"}`}\r\n                            onClick={() => toggleRecommended(snippet)}>\r\n                        Recommend <i className=\"fa fa-certificate\" aria-hidden=\"true\"/>\r\n                    </button>\r\n            }\r\n        </div>\r\n        <div className=\"row col-12 mt-4\">\r\n            {/*Creator*/}\r\n            <div className=\"col-12 col-md-3\">\r\n                <h6>Created By: <a href=\"#\">{snippet.creator}</a></h6>\r\n            </div>\r\n            {/*Tags*/}\r\n            <div className=\"col-12 col-md-9 text-secondary float-right\">\r\n                <div className=\"float-right\">\r\n                    <div className=\"tagBackground rounded row \">\r\n                        {\r\n                            (snippet.tags !== null && snippet.tags.length > 0) &&\r\n                                snippet.tags.map((tag, index) =>\r\n                                    <TagComponent\r\n                                        key={index}\r\n                                        tag={tag}\r\n                                        snippet={snippet}\r\n                                        edit={false}\r\n                                    />\r\n                                )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\nexport default SnippetDisplayComponent\r\n","import React from \"react\"\r\nimport SnippetEditComponent from \"./SnippetEditComponent\";\r\nimport SnippetDisplayComponent from \"./SnippetDisplayComponent\";\r\n\r\nconst SnippetComponent = ({snippet, text, editLocalSnippet, editLocalText, updateSnippet, createSnippet, addTagToSnippet, removeTagFromSnippet, deleteSnippet, toggleLike, togglePrivacy, toggleRecommended, createGistForUser, edit, create, singleview, activeUser}) =>\r\n    <div className=\"card mt-4 \">\r\n        {\r\n            console.log(\"Snippet:\", snippet)\r\n        }\r\n        {/*{*/}\r\n        {/*    console.log(\"ActiveUser from Snippet Component:\", activeUser.username)*/}\r\n        {/*}*/}\r\n        {/*{*/}\r\n        {/*    console.log(\"Creator from Snippet:\", snippet.creator)*/}\r\n        {/*}*/}\r\n        {\r\n            ((edit || create) && activeUser.username === snippet.creator) &&\r\n                <SnippetEditComponent\r\n                    snippet={snippet}\r\n                    text={text}\r\n                    editLocalSnippet={editLocalSnippet}\r\n                    editLocalText={editLocalText}\r\n                    updateSnippet={updateSnippet}\r\n                    createSnippet={createSnippet}\r\n                    addTagToSnippet={addTagToSnippet}\r\n                    removeTagFromSnippet={removeTagFromSnippet}\r\n                    deleteSnippet={deleteSnippet}\r\n                    toggleLike={toggleLike}\r\n                    togglePrivacy={togglePrivacy}\r\n                    createGistForUser={createGistForUser}\r\n                    edit={edit}\r\n                    create={create}\r\n                    activeUser={activeUser}\r\n                />\r\n        }\r\n        {\r\n            ((!edit && !create) || activeUser.username !== snippet.creator) &&\r\n                <SnippetDisplayComponent\r\n                    snippet={snippet}\r\n                    toggleLike={toggleLike}\r\n                    activeUser={activeUser}\r\n                    singleview={singleview}\r\n                    toggleRecommended={toggleRecommended}\r\n                />\r\n        }\r\n\r\n    </div>\r\n\r\nexport default SnippetComponent\r\n","const SNIPPET_URL = \"https://cs5610-project-java-server.herokuapp.com/api/snippets\"\r\nconst CREATOR_URL = \"https://cs5610-project-java-server.herokuapp.com/api/creators\"\r\nconst SNIPPET_NODE_URL = \"https://cs5610-server-node-project.herokuapp.com/api\"\r\nconst SNIPPET_NODE_URL_2 = \"https://cs5610-node-v2-group3.herokuapp.com/api\"\r\nconst LOCAL_POST = \"http://localhost:3003/api\"\r\n\r\n\r\nexport const findSnippetById = (snippetId) =>\r\n    fetch(`${SNIPPET_NODE_URL_2}/snippets/id/${snippetId}`)\r\n        .then(response => response.json());\r\n\r\n\r\nexport const findSnippetsByCreator = (username) =>\r\n    fetch(`${SNIPPET_NODE_URL_2}/${username}/snippets`)\r\n        .then(response => response.json());\r\n\r\n\r\nexport const findAllSnippets = () =>\r\n    fetch(`${SNIPPET_NODE_URL_2}/snippets`)\r\n        .then(response => response.json());\r\n\r\n\r\nexport const findRecommendedSnippets = () =>\r\n    fetch(`${SNIPPET_NODE_URL_2}/snippets/starred`)\r\n        .then(response => response.json());\r\n\r\n\r\nexport const findFavoriteSnippets = (username) =>\r\n    fetch(`${SNIPPET_NODE_URL_2}/${username}/likes`)\r\n        .then(response => response.json());\r\n\r\n\r\nexport const findAllPublicSnippets = () =>\r\n    fetch(`${SNIPPET_NODE_URL_2}/snippets/public`)\r\n        .then(response => response.json());\r\n\r\n\r\nexport const findAllStarredSnippets = () =>\r\n    fetch(`${SNIPPET_NODE_URL_2}/snippets/starred`)\r\n        .then(response => response.json());\r\n\r\n\r\nexport const searchSnippetsByTags = (tags) =>\r\n    fetch(`${SNIPPET_NODE_URL_2}/snippets/tags/${tags}`)\r\n    .then(response => response.json());\r\n\r\n\r\nexport const createSnippet = (snippet) =>\r\n    fetch(`${SNIPPET_NODE_URL_2}/snippets`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(snippet),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json());\r\n\r\n\r\nexport const updateSnippet = (newSnippet) =>\r\n    fetch(`${SNIPPET_NODE_URL_2}/snippets/id/${newSnippet._id}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(newSnippet),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    }).then(response => response.json());\r\n\r\n\r\nexport const deleteSnippet = (snippetId) =>\r\n    fetch(`${SNIPPET_NODE_URL_2}/snippets/id/${snippetId}`, {\r\n        method: \"DELETE\"\r\n    })\r\n\r\nexport default {\r\n    createSnippet,\r\n    updateSnippet,\r\n    findSnippetById,\r\n    findSnippetsByCreator,\r\n    findAllSnippets,\r\n    findAllPublicSnippets,\r\n    deleteSnippet,\r\n    searchSnippetsByTags,\r\n    findRecommendedSnippets,\r\n    findFavoriteSnippets\r\n}\r\n\r\n","import snippetServices from \"../services/snippetServices\";\r\n\r\nexport const CREATE_SNIPPET = \"CREATE_SNIPPET\";\r\nexport const DELETE_SNIPPET = \"DELETE_SNIPPET\";\r\nexport const FIND_SNIPPET = \"FIND_SNIPPET\";\r\nexport const EDIT_LOCAL_SNIPPET = \"EDIT_LOCAL_SNIPPET\"\r\nexport const ADD_TAG = \"ADD_TAG\";\r\nexport const REMOVE_TAG = \"REMOVE_TAG\";\r\nexport const EDIT_LOCAL_TEXT = \"EDIT_LOCAL_TEXT\";\r\nexport const TOGGLE_RECOMMENDED = \"TOGGLE_RECOMMENDED\";\r\nexport const UPDATE_TERMS = \"UPDATE_TERMS\";\r\nexport const FIND_SNIPPETS = \"FIND_SNIPPETS\"\r\n\r\nexport const createSnippet = (dispatch, snippet, text) => {\r\n    snippet.codeText = text\r\n    snippetServices.createSnippet(snippet)\r\n        .then(snippet => dispatch({\r\n                type: CREATE_SNIPPET,\r\n                snippet\r\n            }\r\n        ))\r\n}\r\n\r\nexport const addTagToSnippet = (dispatch, tag) => {\r\n    dispatch({\r\n        type: ADD_TAG,\r\n        tag\r\n    })\r\n}\r\nexport const removeTagFromSnippet = (dispatch, tag) => {\r\n    dispatch({\r\n        type: REMOVE_TAG,\r\n        tag\r\n    })\r\n}\r\nexport const createLocalSnippet = (dispatch, snippet) => {\r\n    dispatch({\r\n            type: CREATE_SNIPPET,\r\n            snippet\r\n    })}\r\n\r\nexport const editLocalSnippet = (dispatch, snippet) => {\r\n    dispatch({\r\n        type: EDIT_LOCAL_SNIPPET,\r\n        snippet\r\n    })\r\n}\r\n\r\nexport const editLocalText = (dispatch, text) => {\r\n    dispatch({\r\n        type: EDIT_LOCAL_TEXT,\r\n        text\r\n    })\r\n}\r\n\r\nexport const updateSnippet = (dispatch, snippet, text) => {\r\n    snippet.codeText = text\r\n    snippetServices.updateSnippet(snippet)\r\n}\r\n\r\nexport const toggleLike = (dispatch, activeUser, likedSnippet) => {\r\n    if (likedSnippet.likes.includes(activeUser.username)) {\r\n        likedSnippet.likes = likedSnippet.likes.filter(user => user !== activeUser.username);\r\n    } else {\r\n        likedSnippet.likes.push(activeUser.username);\r\n    }\r\n    snippetServices.updateSnippet(likedSnippet)\r\n        .then(() => dispatch({\r\n                type: EDIT_LOCAL_SNIPPET,\r\n                snippet: likedSnippet\r\n            }\r\n        ))\r\n}\r\n\r\nexport const toggleRecommended = (dispatch, snippet) => {\r\n    snippet.recommended = !snippet.recommended;\r\n    snippetServices.updateSnippet(snippet)\r\n        .then(snippet => dispatch({\r\n            type: EDIT_LOCAL_SNIPPET,\r\n            snippet\r\n        }))\r\n\r\n}\r\n\r\nexport const togglePrivacy = (dispatch, snippet) => {\r\n    snippet.publicPost = !snippet.publicPost\r\n    dispatch({\r\n        type: EDIT_LOCAL_SNIPPET,\r\n        snippet\r\n    })\r\n}\r\n\r\nexport const deleteSnippet = (dispatch, snippetId) =>\r\n    snippetServices.deleteSnippet(snippetId)\r\n        .then(() => dispatch({\r\n            type: DELETE_SNIPPET,\r\n            snippetId\r\n        }))\r\n\r\nexport const findAllSnippets = (dispatch) =>\r\n    snippetServices.findAllSnippets()\r\n        .then(snippets => dispatch({\r\n            type: FIND_SNIPPETS,\r\n            snippets: snippets\r\n        }))\r\n\r\nexport const findRecommendedSnippets = (dispatch) =>\r\n    snippetServices.findRecommendedSnippets()\r\n        .then(snippets => dispatch({\r\n            type: FIND_SNIPPETS,\r\n            snippets: snippets\r\n        }))\r\n\r\nexport const findFavoriteSnippets = (dispatch, username) =>\r\n    snippetServices.findFavoriteSnippets(username)\r\n        .then(snippets => dispatch({\r\n                type: FIND_SNIPPETS,\r\n                snippets: snippets\r\n        }))\r\n\r\n\r\nexport const searchSnippetsByTags = (dispatch, tags) =>\r\n    snippetServices.searchSnippetsByTags(tags)\r\n        .then(snippets => dispatch({\r\n            type: FIND_SNIPPETS,\r\n            snippets: snippets\r\n        }))\r\n\r\nexport const findAllPublicSnippets = (dispatch) =>\r\n    snippetServices.findAllPublicSnippets()\r\n        .then(snippets => dispatch({\r\n            type: FIND_SNIPPETS,\r\n            snippets: snippets\r\n        }))\r\n\r\nexport const findSnippetById = (dispatch, snippetId) =>\r\n    snippetServices.findSnippetById(snippetId)\r\n        .then(snippet => dispatch({\r\n            type: FIND_SNIPPET,\r\n            snippet: snippet\r\n        }))\r\n\r\nexport const findSnippetsByCreator = (dispatch, username) =>\r\n    snippetServices.findSnippetsByCreator(username)\r\n        .then(snippets => dispatch({\r\n            type: FIND_SNIPPETS,\r\n            snippets: snippets\r\n        }))\r\n\r\nexport const updateSearchTerms = (dispatch, terms) =>\r\n    dispatch({\r\n        type: UPDATE_TERMS,\r\n        terms\r\n    })\r\n","// const username = \"group3person\"\r\n// const password = \"nicsalehwill3\"\r\n\r\n//const gistId = \"3ca80de89acfaac051414ac0c308359b\"\r\n\r\nconst headers = {\r\n    \"Authorization\" : `Token 70f143af3d540e77de91e721e5c4e8960a181663`\r\n}\r\n\r\nexport const getGistsForUser = () =>\r\n    fetch(\"https://api.github.com/gists\",\r\n          {\"method\":\"GET\",\r\n          \"headers\": headers})\r\n        .then(response => response.json())\r\n\r\nexport const createGistForUser = (token, title, description, content) =>\r\n    fetch(\"https://api.github.com/gists\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify( {\r\n                \"description\": `${description}`,\r\n                \"public\": true,\r\n                \"files\": {\r\n                    [title]: {\r\n                        \"content\": `${content}`\r\n                    }\r\n                }\r\n            }),\r\n            headers: {\r\n                \"Authorization\" : `Token ${token}`\r\n            }})\r\n        .then(response => response.json())\r\n\r\nexport const updateGist = (gistId, title, description, content) =>\r\n    fetch(`https://api.github.com/gists/${gistId}`, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify( {\r\n            \"description\": `${description}`,\r\n            \"public\": true,\r\n            \"files\": {\r\n                [title]: {\r\n                    \"content\": `${content}`\r\n                }\r\n            }\r\n        }),\r\n        headers: headers})\r\n        .then(response => response.json())\r\n\r\nexport const deleteGist = (id) =>\r\n    fetch(`https://api.github.com/gists/${id}`,\r\n        {method:\"DELETE\",\r\n            headers: headers\r\n        })\r\n\r\nexport const getGistById = (gistId) =>\r\n    fetch(`https://api.github.com/gists/${gistId}`,\r\n        {\"method\":\"GET\",\r\n            \"headers\": headers})\r\n        .then(response => response.json())\r\n\r\nexport const getGistFile = (fileUrl) =>\r\n    fetch(`${fileUrl}`,\r\n        // {\"method\":\"GET\",\r\n        //     \"headers\": headers}\r\n            )\r\n        .then(response => response.text())\r\n\r\n\r\nexport default {getGistsForUser, getGistById, getGistFile, createGistForUser, deleteGist, updateGist}\r\n","import GistService from \"../services/GistService\";\r\n\r\n// export const LOGIN_GITHUB = \"LOGIN_GITHUB\"\r\n\r\nexport const GET_GISTS = \"GET_GISTS\"\r\nexport const CREATE_GIST = \"CREATE_GIST\"\r\nexport const GET_GIST = \"GET_GIST\"\r\nexport const GET_FILE = \"GET_FILE\"\r\nexport const DELETE_GIST = \"DELETE_GIST\"\r\nexport const UPDATE_GIST = \"UPDATE_GIST\"\r\n\r\nexport const getGistsForUser = (dispatch) =>\r\n    GistService.getGistsForUser()\r\n        .then(response => dispatch({type: GET_GISTS, response}))\r\n\r\nexport const createGistForUser = (dispatch, token, title, description, content) =>\r\n    GistService.createGistForUser(token,title, description, content)\r\n        .then(response => dispatch({type: CREATE_GIST, response}))\r\n\r\nexport const deleteGist = (dispatch, id) =>\r\n    GistService.deleteGist(id)\r\n        .then(response => dispatch({type: DELETE_GIST, response}))\r\n\r\nexport const updateGist = (dispatch, id, title, description, content) =>\r\n    GistService.updateGist(id, title, description, content)\r\n        .then(response => dispatch({type: UPDATE_GIST, response}))\r\n\r\nexport const getGistById = (dispatch, gistId) =>\r\n    GistService.getGistById(gistId)\r\n        .then(response => {\r\n            console.log(\"ACtion\", response)\r\n            dispatch({type: GET_GIST, gist: response})\r\n        })\r\n\r\nexport const getGistFile = (dispatch, fileUrl) =>\r\n    GistService.getGistFile(fileUrl)\r\n    .then(gistfile => {\r\n        console.log(\"Action file\", gistfile)\r\n        dispatch({type: GET_FILE, gistfile})\r\n    })\r\n\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport SnippetComponent from \"../Components/Snippets/SnippetComponent\";\r\nimport {toggleLike, toggleRecommended} from \"../Actions/SnippetActions\";\r\nimport {createGistForUser} from \"../Actions/GistActions\";\r\nimport {fireUID} from \"../config/db\";\r\n\r\n\r\nclass SnippetContainer extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {};\r\n    }\r\n\r\n    async loadingWrapper() {\r\n        await this.props.getUserByUID(fireUID)\r\n        await this.props.findSnippetsByCreator(this.props.activeUser.username)\r\n        this.state.user = this.props.user\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadingWrapper().then(() => console.log(this.props), this.render()\r\n        )\r\n        this.render()\r\n    }\r\n\r\n    render() {\r\n        return <SnippetComponent/>\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    activeUser : state.userReducer.activeUser\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    createGistForUser: (token, title, description, content) => createGistForUser(dispatch, token, title, description, content),\r\n    toggleLike: (activeUser, snippet) => toggleLike(dispatch, activeUser, snippet),\r\n    toggleRecommended: (snippet) => toggleRecommended(dispatch, snippet)\r\n})\r\n\r\nexport default connect\r\n(stateToPropertyMapper, propertyToDispatchMapper)\r\n(SnippetComponent)\r\n","import React from 'react'\r\nimport SnippetContainer from \"../../Containers/SnippetContainer\";\r\n\r\nconst SnippetSearchListComponent = ({snippets}) =>\r\n    <div>\r\n        {\r\n            snippets.length > 0 &&\r\n                snippets.map((snippet, index)=>\r\n                    <div key={index}>\r\n                        <SnippetContainer snippet={snippet}/>\r\n                    </div>\r\n                )\r\n        }\r\n    </div>\r\n\r\nexport default SnippetSearchListComponent\r\n","import React from \"react\";\r\nimport SnippetSearchBarComponent from \"./SnippetSearchBarComponent\";\r\nimport SnippetSearchListComponent from \"./SnippetSearchListComponent\";\r\n\r\nconst SnippetSearchComponent = ({snippets, terms, updateSearchTerms}) =>\r\n    <div>\r\n        <h2 className=\"mt-3 m-3\">Search for Snippets</h2>\r\n        <SnippetSearchBarComponent\r\n            terms={terms}\r\n            updateSearchTerms={updateSearchTerms}\r\n        />\r\n        <SnippetSearchListComponent snippets={snippets}/>\r\n    </div>\r\n\r\nexport default SnippetSearchComponent\r\n","import React from 'react'\r\n// import {getGistById, getGistFile, getGistsForUser} from \"../Actions/GistActions\";\r\nimport SnippetSearchComponent from \"../Components/Search/SnippetSearchComponent\";\r\nimport {connect} from \"react-redux\";\r\n// import {findAllUsers} from \"../Actions/UserActions\";\r\nimport {\r\n    // findAllSnippets,\r\n    searchSnippetsByTags,\r\n    updateSearchTerms\r\n} from \"../Actions/SnippetActions\";\r\n\r\nclass SnippetSearchContainer extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.match.params.terms) {\r\n            this.props.updateSearchTerms(this.props.match.params.terms)\r\n            this.props.searchSnippetsByTags(this.props.match.params.terms);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.terms !== prevProps.match.params.terms) {\r\n            this.props.updateSearchTerms(this.props.match.params.terms)\r\n            this.props.searchSnippetsByTags(this.props.match.params.terms);\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <SnippetSearchComponent\r\n                    snippets={this.props.snippets}\r\n                    terms={this.props.terms}\r\n                    // searchSnippetsByTags={this.props.searchSnippetsByTags}\r\n                    updateSearchTerms={this.props.updateSearchTerms}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    snippets: state.snippetReducer.snippets,\r\n    terms: state.snippetReducer.terms,\r\n    // gists: state.gistReducer.gists,\r\n    // activeUser: state.userReducer.activeUser\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    // findAllSnippets: () => findAllSnippets(dispatch),\r\n    // getGistsForUser: () => getGistsForUser(dispatch),\r\n    // getGistById: () => getGistById(dispatch),\r\n    // getGistFile: (fileUrl) => getGistFile(dispatch, fileUrl),\r\n    // findAllUsers: () => findAllUsers(dispatch),\r\n    searchSnippetsByTags: (tags) => searchSnippetsByTags(dispatch, tags),\r\n    updateSearchTerms: (terms) => updateSearchTerms(dispatch, terms)\r\n})\r\n\r\n\r\nexport default connect (stateToPropertyMapper, propertyToDispatchMapper)\r\n(SnippetSearchContainer)\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport fire from \"../config/db\";\r\n\r\n//All firebase code *heavily* adapted from https://www.bennettnotes.com/react-login-with-google-firebase/\r\n\r\nclass LoginComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.login = this.login.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.signup = this.signup.bind(this);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            paToken: '',\r\n            type: ''\r\n        };\r\n    }\r\n\r\n    logout(e) {\r\n        e.preventDefault();\r\n        fire.auth().signOut().then(() => alert(\"You've been logged out\"));\r\n    }\r\n\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    login(e) {\r\n        e.preventDefault();\r\n        fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((u)=>{alert(\"You've been signed in\")\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    signup(e){\r\n        e.preventDefault();\r\n        fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n            .then((u)=> {\r\n                fire.database().ref('users/' + fire.auth().currentUser.uid).set({\r\n                    username: this.state.name,\r\n                    uid: fire.auth().currentUser.uid,\r\n                    email: this.state.email,\r\n                    paToken: this.state.paToken,\r\n                    type: this.state.type,\r\n                    locked: false\r\n                });\r\n\r\n            })\r\n            .then(() => {alert(\"User created\")})\r\n            .catch((error) => {\r\n                alert(error);\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-6\">\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Username</label>\r\n                        <input value={this.state.name} onChange={this.handleChange} name=\"name\"\r\n                               className=\"form-control\" id=\"name\"\r\n                               placeholder=\"etardis123\"/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\">Email address</label>\r\n                        <input value={this.state.email} onChange={this.handleChange} type=\"email\" name=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\r\n                        <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputPassword1\">Password</label>\r\n                        <input value={this.state.password} onChange={this.handleChange} type=\"password\" name=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"paToken\">Personal Access Token</label>\r\n                        <input value={this.state.paToken} onChange={this.handleChange} type=\"password\" name=\"paToken\"\r\n                               className=\"form-control\" id=\"paToken\" placeholder=\"Personal Access Token\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"type\">Type</label>\r\n                        <input value={this.state.type} onChange={this.handleChange} name=\"type\"\r\n                               className=\"form-control\" id=\"type\" placeholder=\"USER, ADMIN, MOD\"/>\r\n                    </div>\r\n                    <button type=\"submit\" onClick={this.login} class=\"btn btn-primary\">Login</button>\r\n                    <button type=\"submit\" onClick={this.logout} className=\"btn btn-secondary\">Logout</button>\r\n                    <button onClick={this.signup} style={{marginLeft: '25px'}} className=\"btn btn-success\">Signup</button>\r\n                </form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default LoginComponent;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport SnippetSearchComponent from \"./Containers/SnippetSearchContainer\";\r\nimport LoginComponent from \"./Components/LoginComponent\";\r\nimport fire from \"./config/db\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = ({\r\n      user: null,\r\n    });\r\n    this.authListener = this.authListener.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.authListener();\r\n  }\r\n\r\n  authListener() {\r\n    fire.auth().onAuthStateChanged((user) => {\r\n      console.log(user);\r\n      if (user) {\r\n        this.setState({ user });\r\n        localStorage.setItem('user', user.uid);\r\n      } else {\r\n        this.setState({ user: null });\r\n        localStorage.removeItem('user');\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n        <div>{this.state.user ? ( <SnippetSearchComponent/>) : (<LoginComponent />)}</div>)\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","import {GET_GISTS, GET_GIST, GET_FILE, CREATE_GIST, DELETE_GIST, UPDATE_GIST} from \"../Actions/GistActions\"\r\n\r\nconst initialState = {\r\n    gists: [],\r\n    gist: {},\r\n    file: \"\"\r\n}\r\n\r\nconst gistReducer = (state = initialState, action = action) => {\r\n    switch (action.type) {\r\n\r\n        case GET_GISTS:\r\n            return {\r\n                ...state,\r\n                gists: action.response\r\n            }\r\n        case CREATE_GIST:\r\n            return {\r\n                ...state,\r\n                gists: [...state.gists, action.gist]\r\n            }\r\n        case UPDATE_GIST:\r\n            return {\r\n                ...state,\r\n                // gists: state.gists.map(gist => gist.id === action.gist.id ? action.gist : gist)\r\n            }\r\n        case DELETE_GIST:\r\n            return {\r\n                ...state,\r\n                gists: state.gists.filter(gist => gist.id !== action.gist.id)\r\n            }\r\n\r\n        case GET_GIST:\r\n            console.log(\"Reducer\", action.gist)\r\n            return {\r\n                ...state,\r\n                gist: action.gist\r\n            }\r\n        case GET_FILE:\r\n            console.log(\"Reducer file\", action.gistfile)\r\n            return {\r\n                ...state,\r\n                file: action.gistfile\r\n            }\r\n\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default gistReducer\r\n","import {\r\n    CREATE_SNIPPET,\r\n    FIND_SNIPPETS,\r\n    FIND_SNIPPET,\r\n    EDIT_LOCAL_SNIPPET,\r\n    EDIT_LOCAL_TEXT,\r\n    ADD_TAG,\r\n    REMOVE_TAG,\r\n    DELETE_SNIPPET,\r\n    UPDATE_TERMS\r\n} from '../Actions/SnippetActions'\r\n\r\nconst _ = require('lodash');\r\n\r\nconst initialState = {\r\n    snippets: [],\r\n    text: \"\",\r\n    terms: \"\",\r\n}\r\n\r\nconst snippetReducer = (state = initialState, action = action) => {\r\n    switch(action.type) {\r\n        case CREATE_SNIPPET:\r\n            return {\r\n                ...state,\r\n                snippets: [action.snippet]\r\n            };\r\n        case EDIT_LOCAL_SNIPPET:\r\n            return {\r\n                ...state,\r\n                snippets: _.cloneDeep(\r\n                    state.snippets.map(snippet =>\r\n                        snippet._id === action.snippet._id ? action.snippet : snippet\r\n                    )\r\n                )\r\n            };\r\n        case EDIT_LOCAL_TEXT:\r\n            return {\r\n                ...state,\r\n                text: action.text\r\n            }\r\n        case ADD_TAG:\r\n            let tags = []\r\n            if (state.snippets[0].tags !== null) {\r\n                tags = state.snippets[0].tags;\r\n            }\r\n            tags.push(action.tag);\r\n            return {\r\n                ...state,\r\n                snippets: [{\r\n                    ...state.snippets[0],\r\n                    tags: tags\r\n                }]\r\n            };\r\n        case REMOVE_TAG:\r\n            return {\r\n                ...state,\r\n               snippets: [{\r\n                    ...state.snippets[0],\r\n                    tags: state.snippets[0].tags.filter(tag => action.tag !== tag)\r\n                }]\r\n            };\r\n\r\n        case DELETE_SNIPPET:\r\n            return {\r\n                ...state,\r\n                snippets: state.snippets.filter(snippet => snippet._id !== action.snippetId)\r\n            };\r\n        case FIND_SNIPPETS:\r\n            return {\r\n                ...state,\r\n                snippets: action.snippets\r\n            };\r\n        case FIND_SNIPPET:\r\n            return {\r\n                ...state,\r\n                snippets: [action.snippet]\r\n            }\r\n        case UPDATE_TERMS:\r\n            return {\r\n                ...state,\r\n                terms: action.terms\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default snippetReducer;\r\n","import React from \"react\"\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst NavbarComponent = () =>\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container\">\r\n            <span className=\"fa-stack fa-lg\">\r\n                <i className=\"fa fa-bookmark fa-stack-2x\" aria-hidden=\"true\"/>\r\n                <i className=\"fa fa-code fa-stack-1x text-white\" aria-hidden=\"true\"/>\r\n            </span>\r\n            <Link className=\"navbar-brand\" to=\"/\">CodeSaver</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n                    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"/>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item active\">\r\n                        <Link className=\"nav-link\" to=\"/search\">Search <span className=\"sr-only\">(current)</span></Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                         <Link className=\"nav-link\" to=\"/profile\">Profile</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link className=\"nav-link\" to=\"/mysnippets\">My Snippets</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/recommended\">Recommended</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/favorites\">Bookmarked</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/import_gist\">Import</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin\">Admin</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/privacy\">Privacy</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/register\">Register</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/login2\">Login</Link>\r\n                    </li>\r\n                </ul>\r\n                <form className=\"form-inline my-2 my-lg-0\">\r\n                    <Link className=\"nav-link\" to=\"/login\">\r\n                    <button className=\"btn btn-outline-primary my-2 my-sm-0\" type=\"submit\">User</button>\r\n                    </Link>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n\r\nexport default NavbarComponent;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport NavbarComponent from \"../Components/NavbarComponent\";\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n\r\n})\r\n\r\nconst propertyToDispatchMapper =(dispatch) => ({\r\n\r\n})\r\n\r\nexport default connect (\r\n    stateToPropertyMapper,\r\n    propertyToDispatchMapper\r\n)\r\n(NavbarComponent)\r\n","import React from \"react\"\r\n\r\nvar fileName = \"\"\r\nconst TestSnippetDisplayPageComponent = ({loginGithub, getGistsForUser, getGistById, getGistFile, gists, gist, file}) =>\r\n    <div>\r\n        <h1>Show a list of snippets here!</h1>\r\n        <button onClick={getGistsForUser}>Get User Gists</button>\r\n        <ul>\r\n            {\r\n                gists[0] &&\r\n                gists.map((gist, index) =>\r\n                              <li>Gist Id: {gist.id} Owner: {gist.owner.login}</li>\r\n                )\r\n\r\n            }\r\n        </ul>\r\n        <button onClick={getGistById}>Get One Gist</button>\r\n        <p>{!gist ? \"nothing here\" : gist.id}</p>\r\n            <div>\r\n            {(typeof Object.keys(gist) !== 'undefined' && Object.keys(gist).length > 0) ?\r\n             fileName = Object.keys(gist.files) : \"No gist file to pull\" }\r\n            </div>\r\n            <button onClick={() => getGistFile(gist.files[fileName].raw_url)}>Get Gist File</button>\r\n            <p>{!file? \"nothing here\" : file}</p>\r\n    </div>\r\n\r\nexport default TestSnippetDisplayPageComponent\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport {getGistsForUser, getGistById, getGistFile} from \"../Actions/GistActions\"\r\nimport TestSnippetDisplayPageComponent from \"../Components/TestSnippetDisplayPageComponent\"\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    gists: state.userReducer.gists,\r\n    gist: state.userReducer.gist,\r\n    file: state.userReducer.file\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    getGistsForUser: () => getGistsForUser(dispatch),\r\n    getGistById: () => getGistById(dispatch),\r\n    getGistFile: (fileUrl) => getGistFile(dispatch, fileUrl)\r\n})\r\n\r\nexport default connect\r\n(stateToPropertyMapper, propertyToDispatchMapper)\r\n(TestSnippetDisplayPageComponent)","// const username = \"group3person\"\r\n// const password = \"nicsalehwill3\"\r\n\r\nimport fire, {fireUser} from \"../config/db\";\r\n\r\nconst headers = {\r\n    \"Authorization\": `Token 70f143af3d540e77de91e721e5c4e8960a181663`\r\n}\r\n\r\nexport const findAllUsers = () =>\r\n    fire.database().ref(\"/users\").once('value')\r\n        .then((snapshot) => {\r\n            return Object.values(snapshot.val())\r\n        })\r\n\r\nexport async function getUser(username) {\r\n    return Promise.resolve(fire.database().ref(\"/users/\").once('value')\r\n        .then(userData => {\r\n            let x\r\n            console.log(userData.val())\r\n            userData.forEach((user) => {\r\n                if (user.val().username === username) {\r\n                    console.log(user.val())\r\n                    x = user.val()\r\n                }\r\n            })\r\n            return Promise.resolve(x)\r\n        }))\r\n}\r\n\r\nexport async function getUserByUID(uid) {\r\n    return Promise.resolve(fire.database().ref(\"/users/\" + uid).once('value')\r\n        .then(data => {\r\n            console.log(\"GetUserByIDSERVICE\", data.val())\r\n            return Promise.resolve(data.val())\r\n        })\r\n    )\r\n}\r\n\r\n\r\nexport async function getAuth() {\r\n    console.log(\"GET AUTH\", fireUser)\r\n    return Promise.resolve(await fireUser)\r\n}\r\n\r\n\r\nexport const getTokenForUser = (uid) =>\r\n    fire.database().ref(\"/users/\" + uid).once('value')\r\n        .then((snapshot) => {\r\n            return snapshot.val()[\"paToken\"]\r\n        })\r\n\r\nexport const updateUser = (uid, newUser) =>\r\n    fire.database().ref(\"/users/\" + uid).set({\r\n        locked: newUser.locked,\r\n        username: newUser.username,\r\n        uid: newUser.uid,\r\n        email: newUser.email,\r\n        paToken: newUser.paToken,\r\n        type: newUser.type\r\n    })\r\n\r\n\r\nexport default {findAllUsers, getTokenForUser, updateUser, getUser, getAuth, getUserByUID}\r\n","import UserService from \"../services/UserService\";\r\n\r\nexport const FIND_ALL_USERS = \"FIND_ALL_USERS\"\r\nexport const GET_USER = \"GET_USER\"\r\nexport const GET_AUTH= \"GET_AUTH\"\r\n\r\nexport const GET_USER_BY_UID = \"GET_USER_BY_UID\"\r\n\r\nexport const UPDATE_USER = \"UPDATE_USER\"\r\n\r\nexport const findAllUsers = (dispatch) => {\r\n    UserService.findAllUsers()\r\n        .then(users => {\r\n            console.log(\"Hit User Action\", users)\r\n            dispatch({\r\n                type: FIND_ALL_USERS,\r\n                users: users\r\n            })\r\n        })\r\n}\r\n\r\nexport const updateUser = (dispatch, user) => {\r\n    UserService.updateUser(user.uid, user)\r\n        .then(() => {\r\n            dispatch({\r\n                type: UPDATE_USER,\r\n                user: user\r\n            })\r\n        })\r\n}\r\n\r\nexport const getAuth = (dispatch) => {\r\n    UserService.getAuth()\r\n        .then(auth => {\r\n            // console.log(\"GET AUTH ACTION\", auth)\r\n            dispatch({\r\n                type: GET_AUTH,\r\n                auth: auth\r\n            })\r\n        })\r\n}\r\n\r\n\r\nexport const getUser = (dispatch, username) => {\r\n    UserService.getUser(username)\r\n        .then(user => {\r\n            // console.log(\"Get User user\", user)\r\n            dispatch({\r\n                type: GET_USER,\r\n                user: user\r\n            })\r\n        })\r\n}\r\n\r\nexport const getUserByUID = (dispatch, uid) => {\r\n    UserService.getUserByUID(uid)\r\n        .then(user => {\r\n            console.log(\"Get User by ID\", user)\r\n            dispatch({\r\n                type: GET_USER_BY_UID,\r\n                user: user\r\n            })\r\n        })\r\n}\r\n\r\n\r\n","import React, {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport fire from \"../../config/db\";\r\nimport {findAllPublicSnippets} from \"../../Actions/SnippetActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUser} from \"../../Actions/UserActions\";\r\n\r\nconst UserProfileEditComponent = ({user}) => {\r\n    return (\r\n\r\n        <div>\r\n            {console.log({user})}\r\n            <div className=\"card-body\">\r\n                {/*<h3 className=\"card-title\">Profile</h3>*/}\r\n                <div className=\"wbdv-message\">\r\n                    <div className=\"alert alert-success col-sm-12 d-none\" role=\"alert\">\r\n                        Profile saved\r\n                    </div>\r\n                    <div className=\"alert alert-danger col-sm-12 d-none\" role=\"alert\">\r\n                        Profile not saved\r\n                    </div>\r\n                </div>\r\n                <form>\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"username\" className=\"col-sm-2 col-form-label\">Username</label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input className=\"form-control wbdv-field wbdv-username\" id=\"username\"\r\n                                   placeholder={user.username}\r\n                            />\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    {/*<div className=\"form-group row\">*/}\r\n                    {/*    <label htmlFor=\"githubId\" className=\"col-sm-2 col-form-label\">GitHub ID</label>*/}\r\n                    {/*    <div className=\"col-sm-10\">*/}\r\n                    {/*        <input className=\"form-control\" id=\"githubId\" placeholder=\"GitHub ID\"/>*/}\r\n                    {/*    </div>*/}\r\n                    {/*</div>*/}\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"paToken\" className=\"col-sm-2 col-form-label\">GitHub PA Token</label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input className=\"form-control\" id=\"paToken\" placeholder={user.paToken}/>\r\n                        </div>\r\n                    </div>\r\n                    {/*<div className=\"form-group row\">*/}\r\n                    {/*    <label htmlFor=\"phone\" className=\"col-sm-2 col-form-label\">Phone</label>*/}\r\n                    {/*    <div className=\"col-sm-10\">*/}\r\n                    {/*        <input className=\"form-control wbdv-field wbdv-phone\" id=\"phone\"*/}\r\n                    {/*               placeholder=\"(123) 867-5309\"/>*/}\r\n                    {/*    </div>*/}\r\n                    {/*</div>*/}\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"email\" className=\"col-sm-2 col-form-label\">Email</label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input className=\"form-control\" id=\"email\" placeholder={user.email}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"role\" className=\"col-sm-2 col-form-label\">Role</label>\r\n                        <div className=\"col-sm-10\">\r\n                            <select className=\"custom-select wbdv-field wbdv-role\" id=\"role\"\r\n                                    value={user.type}>\r\n                                <option value=\"USER\">User</option>\r\n                                <option value=\"ADMIN\">Admin</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col-sm-12\">\r\n                            <Link to=\"/profile\"\r\n                                  className=\"btn btn-outline-success btn-block wbdv-button wbdv-update\">Update</Link>\r\n                            <Link to=\"/\"\r\n                                  className=\"btn btn-outline-danger btn-block wbdv-button wbdv-logout\">Logout</Link>\r\n                            <div className=\"row\">\r\n                                <div className=\"alertFld wbdv-message\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>)\r\n}\r\nexport default UserProfileEditComponent\r\n","import React from 'react'\r\nimport UserProfileEditComponent from \"./UserProfileEditComponent\";\r\n\r\nconst UserProfileComponent = () =>\r\n    <div>\r\n        <h2 className=\"m-3\">Profile Page</h2>\r\n        <div className=\"card mt-4\">\r\n            <UserProfileEditComponent/>\r\n        </div>\r\n    </div>\r\n\r\n\r\nexport default UserProfileComponent\r\n","import React from 'react'\r\nimport SnippetSearchListComponent from \"../Search/SnippetSearchListComponent\";\r\nimport UserProfileComponent from \"./UserProfileComponent\";\r\n\r\nconst UserSnippetsComponent = ({snippets, user}) =>\r\n    <div>\r\n        <UserProfileComponent/>\r\n        {\r\n            console.log(user)\r\n        }\r\n        <SnippetSearchListComponent snippets={snippets.length > 0 && snippets.filter(snippet => snippet.creator === user.username)}/>\r\n    </div>\r\n\r\nexport default UserSnippetsComponent\r\n","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport {findSnippetsByCreator} from \"../Actions/SnippetActions\";\r\nimport SnippetSearchListComponent from \"../Components/Search/SnippetSearchListComponent\";\r\nimport {fireUID} from \"../config/db\";\r\nimport {getUserByUID} from \"../Actions/UserActions\";\r\n\r\nclass MySnippetsContainer extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {snippets: {}};\r\n    }\r\n\r\n    async loadingWrapper() {\r\n            await this.props.getUserByUID(fireUID)\r\n        this.state.user = this.props.user\r\n        return await Promise.resolve(this.props.activeUser)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.loadingWrapper().then((user) => this.props.findSnippetsByCreator(user.username))\r\n            .then(() => this.render())\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.render()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    <div>\r\n                        <h2 className=\"mt-2\">My Snippets:</h2>\r\n                        <SnippetSearchListComponent\r\n                            snippets={this.props.snippets ? this.props.snippets : this.state.snippets}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    snippets: state.snippetReducer.snippets,\r\n    activeUser: state.userReducer.activeUser\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    findSnippetsByCreator: (username) => findSnippetsByCreator(dispatch, username),\r\n    getUserByUID: (uid) => getUserByUID(dispatch, uid),\r\n\r\n})\r\n\r\nexport default connect\r\n(stateToPropertyMapper, propertyToDispatchMapper)\r\n(MySnippetsContainer)\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport UserSnippetsComponent from \"../Components/Users/UserSnippetsComponent\";\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    snippets: state.snippetReducer.snippets,\r\n    user: state.snippetReducer.user\r\n})\r\n\r\nconst propertyToDispatchMapper =(dispatch) => ({\r\n\r\n})\r\n\r\nexport default connect (\r\n    stateToPropertyMapper,\r\n    propertyToDispatchMapper\r\n)\r\n(UserSnippetsComponent)\r\n","import {FIND_ALL_USERS, GET_USER, UPDATE_USER, GET_USER_BY_UID} from \"../Actions/UserActions\";\r\n\r\nconst initialState = {\r\n    users: [],\r\n    activeUser: {},\r\n    displayedUser: {}\r\n}\r\n\r\nconst UserReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FIND_ALL_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n\r\n        case UPDATE_USER:\r\n            console.log(\"Reducer\", state.users)\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user =>\r\n                    user.uid === action.user.uid ? action.user : user\r\n                )\r\n            }\r\n        case GET_USER:\r\n            return {\r\n                ...state,\r\n                displayedUser: action.user\r\n            }\r\n        case GET_USER_BY_UID:\r\n            return {\r\n                ...state,\r\n                activeUser: action.user\r\n            }\r\n        case \"GET_DISPLAYED_USER\":\r\n            return {\r\n                ...state,\r\n                displayedUser: action.user\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default UserReducer;\r\n","import React from \"react\";\r\nimport SnippetContainer from \"./SnippetContainer\";\r\nimport {\r\n    addTagToSnippet, deleteSnippet,\r\n    editLocalSnippet, editLocalText,\r\n    findSnippetById,\r\n    removeTagFromSnippet, togglePrivacy,\r\n    updateSnippet\r\n} from \"../Actions/SnippetActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {getGistById, getGistFile} from \"../Actions/GistActions\";\r\nimport {findAllUsers} from \"../Actions/UserActions\";\r\n\r\nclass EditSnippetContainer extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        const snippetId = this.props.match.params.snippetId\r\n        this.props.findSnippetById(snippetId)\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                {\r\n                    console.log(\"Active user from edit container \", this.props.activeUser)\r\n                }\r\n                {\r\n                    console.log(\"Current snippet from edit container\", this.props.currentSnippet)}\r\n                {\r\n                    this.props.currentSnippet &&\r\n                        <SnippetContainer\r\n                            snippet={this.props.currentSnippet}\r\n                            text={this.props.text}\r\n                            edit={true}\r\n                            singleview={true}\r\n                            editLocalSnippet={this.props.editLocalSnippet}\r\n                            editLocalText={this.props.editLocalText}\r\n                            updateSnippet={this.props.updateSnippet}\r\n                            addTagToSnippet={this.props.addTagToSnippet}\r\n                            removeTagFromSnippet={this.props.removeTagFromSnippet}\r\n                            togglePrivacy={this.props.togglePrivacy}\r\n                            deleteSnippet={this.props.deleteSnippet}\r\n                            activeUser={this.props.activeUser}\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    currentSnippet: state.snippetReducer.snippets[0],\r\n    text: state.snippetReducer.text,\r\n    snippets: state.snippetReducer.snippets,\r\n    gists: state.gistReducer.gists,\r\n    activeUser: state.userReducer.activeUser\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    findSnippetById: (snippetId) => findSnippetById(dispatch, snippetId),\r\n    editLocalSnippet: (snippet) => editLocalSnippet(dispatch, snippet),\r\n    editLocalText: (text) => editLocalText(dispatch, text),\r\n    updateSnippet: (snippet, text) => updateSnippet(dispatch, snippet, text),\r\n    addTagToSnippet: (tag) => addTagToSnippet(dispatch, tag),\r\n    removeTagFromSnippet: (tag) => removeTagFromSnippet(dispatch, tag),\r\n    togglePrivacy: (snippet) => togglePrivacy(dispatch, snippet),\r\n    deleteSnippet: (snippetId) => deleteSnippet(dispatch, snippetId),\r\n    getGistById: () => getGistById(dispatch),\r\n    getGistFile: (fileUrl) => getGistFile(dispatch, fileUrl),\r\n    findAllUsers: () => findAllUsers(dispatch)\r\n})\r\n\r\n\r\nexport default connect\r\n(stateToPropertyMapper, propertyToDispatchMapper)\r\n(EditSnippetContainer)\r\n","import React from \"react\";\r\nimport SnippetContainer from \"./SnippetContainer\";\r\nimport {\r\n    createSnippet,\r\n    createLocalSnippet,\r\n    findSnippetById,\r\n    editLocalSnippet,\r\n    addTagToSnippet, removeTagFromSnippet, editLocalText, togglePrivacy\r\n} from \"../Actions/SnippetActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {getGistById, getGistFile} from \"../Actions/GistActions\";\r\nimport {findAllUsers} from \"../Actions/UserActions\";\r\n\r\nclass CreateSnippetContainer extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            newSnippetTemplate: {\r\n                id: \"\",\r\n                gistId: \"newGist3\",\r\n                creator: \"\",\r\n                dateCreated: \"\",\r\n                lastModified: \"\",\r\n                title: \"Snippet title\",\r\n                description: \"Description and context of code\",\r\n                codeText: \"Add your snippet here...\",\r\n                tags: [],\r\n                likes: [],\r\n                shareableURL: \"\",\r\n                publicPost: true,\r\n                recommended: false\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let temp = this.state.newSnippetTemplate\r\n        temp.creator = this.props.activeUser.username\r\n        this.props.createLocalSnippet(temp)\r\n    };\r\n\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.props.currentSnippet &&\r\n                        <SnippetContainer\r\n                            snippet={this.props.currentSnippet}\r\n                            text={this.props.text}\r\n                            create={true}\r\n                            editLocalSnippet={this.props.editLocalSnippet}\r\n                            editLocalText={this.props.editLocalText}\r\n                            addTagToSnippet={this.props.addTagToSnippet}\r\n                            removeTagFromSnippet={this.props.removeTagFromSnippet}\r\n                            createSnippet={this.props.createSnippet}\r\n                            togglePrivacy={this.props.togglePrivacy}\r\n                            activeUser={this.props.activeUser}\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    currentSnippet: state.snippetReducer.snippets[0],\r\n    text: state.snippetReducer.text,\r\n    activeUser: state.userReducer.activeUser,\r\n    gists: state.gistReducer.gists,\r\n    users: state.userReducer.users\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    findSnippetById: (snippetId) => findSnippetById(dispatch, snippetId),\r\n    createSnippet: (snippet, text) => createSnippet(dispatch, snippet, text),\r\n    createLocalSnippet: (snippet) => {createLocalSnippet(dispatch, snippet)},\r\n    editLocalSnippet: (snippet) => editLocalSnippet(dispatch, snippet),\r\n    editLocalText: (text) => editLocalText(dispatch, text),\r\n    addTagToSnippet: (snippet, tag) => addTagToSnippet(dispatch, snippet, tag),\r\n    removeTagFromSnippet: (tag) => removeTagFromSnippet(dispatch, tag),\r\n    togglePrivacy: (snippet) => togglePrivacy(dispatch, snippet),\r\n    getGistById: () => getGistById(dispatch),\r\n    getGistFile: (fileUrl) => getGistFile(dispatch, fileUrl),\r\n    findAllUsers: () => findAllUsers(dispatch),\r\n})\r\n\r\n\r\nexport default connect\r\n(stateToPropertyMapper, propertyToDispatchMapper)\r\n(CreateSnippetContainer)\r\n","import React from \"react\";\r\n\r\nexport default class UserAdminRowComponent extends React.Component {\r\n    state = {\r\n        editing: false,\r\n        user: this.props.user\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>\r\n                    {\r\n                        !this.state.editing &&\r\n                        <p>{this.props.user.type}</p>\r\n                    }\r\n                    {\r\n                        this.state.editing &&\r\n                        <input\r\n                            className=\"form-control\"\r\n                            onChange={(event) => {\r\n                                const newUserType = event.target.value;\r\n                                this.setState(prevState => ({\r\n                                    user: {...prevState.user, type: newUserType}\r\n                                }))\r\n                            }\r\n                            }\r\n                            value={this.state.user.type}/>\r\n                    }\r\n                </td>\r\n                <td>\r\n                    {\r\n                        !this.state.editing &&\r\n                        <p>{this.props.user.username}</p>\r\n                    }\r\n\r\n                </td>\r\n                {/*<td>{*/}\r\n                {/*    !this.state.editing &&*/}\r\n                {/*    <p>{this.props.user.email}</p>*/}\r\n                {/*}*/}\r\n                {/*    {*/}\r\n                {/*        this.state.editing &&*/}\r\n                {/*        <input*/}\r\n                {/*            className=\"form-control\"*/}\r\n                {/*            onChange={(event) => {*/}\r\n                {/*                const newEmail = event.target.value;*/}\r\n                {/*                this.setState(prevState => ({*/}\r\n                {/*                    user: {...prevState.user, email: newEmail}*/}\r\n                {/*                }))*/}\r\n                {/*            }*/}\r\n                {/*            }*/}\r\n                {/*            value={this.state.user.email}/>*/}\r\n                {/*    }</td>*/}\r\n\r\n\r\n                <td><p>{this.props.user.email}</p></td>\r\n\r\n                {/*//------------------------------------------- Delete Button -------------------------------------//*/}\r\n                <td>\r\n\r\n                    {\r\n                        !this.state.editing &&\r\n                        <button\r\n                            onClick={() => this.setState({editing: true})}\r\n                            className=\"btn btn-light\">Edit</button>\r\n                    }\r\n                    {\r\n                        this.state.editing &&\r\n                        <button className=\"btn btn-light\" onClick={() => {\r\n                            this.props.updateUserRow(this.state.user.uid, this.state.user)\r\n\r\n                            this.setState({\r\n                                editing: false\r\n                            })\r\n\r\n\r\n                        }}>Save\r\n\r\n                        </button>\r\n                    }\r\n                </td>\r\n\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport UserAdminComponent from \"./UserAdminComponent\";\r\nimport UserAdminRowComponent from \"./UserAdminRowComponent\";\r\nimport fire from \"../../config/db\";\r\nimport Loader from 'react-loader-spinner'\r\nimport {findAllUsers} from \"../../Actions/UserActions\";\r\nimport UserService, {updateUser} from \"../../services/UserService\";\r\n\r\nclass UserAdminListComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.findAllUsers()\r\n        this.render();\r\n    }\r\n    componentDidUpdate() {\r\n        this.render();\r\n    }\r\n\r\n\r\n    updateUserRow = (uid, user) => {\r\n        UserService.updateUser(uid,user)\r\n        this.props.findAllUsers()\r\n\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"m-3\">User Admin Page</h2>\r\n                <div>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>User Type</th>\r\n                            <th>Username</th>\r\n                            <th>Email</th>\r\n                            <th>Manage:</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n\r\n                            (this.props.users && this.props.users.length > 0) &&\r\n                            this.props.users.map((user, index) =>\r\n                                <UserAdminRowComponent\r\n                                    user={user}\r\n                                    updateUserRow={this.updateUserRow}\r\n                                    lockUser={this.lockUser}\r\n                                    unlockUser={this.unlockUser}\r\n                                />\r\n                            )\r\n\r\n                        }\r\n\r\n                        </tbody>\r\n                    </table>\r\n                    {\r\n                        (!this.props.users || this.props.users.length <= 0) &&\r\n                        <Loader type=\"audio\" color=\"#00BFFF\" height={80} width={80}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    users: state.userReducer.users\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    findAllUsers: () => findAllUsers(dispatch)\r\n})\r\n\r\nexport default connect(stateToPropertyMapper, propertyToDispatchMapper)\r\n(UserAdminListComponent)\r\n","export default __webpack_public_path__ + \"static/media/laptop_food.e6b4ecb3.png\";","export default __webpack_public_path__ + \"static/media/sample_snippet.5fb934cc.PNG\";","export default __webpack_public_path__ + \"static/media/values_2.a0fa492f.png\";","export default __webpack_public_path__ + \"static/media/timeline.3ef4894b.png\";","import React from \"react\";\r\nimport {findAllUsers} from \"../Actions/UserActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {findAllPublicSnippets} from \"../Actions/SnippetActions\";\r\nimport SnippetSearchListComponent from \"../Components/Search/SnippetSearchListComponent\";\r\n// import \"./LandingPageComponent2.css\"\r\n// import {connect} from \"react-redux\";\r\n// import fire from \"./../config/db\";\r\nimport snippetPicture from \"../assets/media/sample_snippet.PNG\"\r\nimport {Link} from \"react-router-dom\";\r\nimport codePic from \"../assets/media/laptop_food.png\"\r\nimport valuesCode from \"../assets/media/values_2.png\"\r\nimport timeline from \"../assets/media/timeline.png\"\r\nimport StatisticsCounter from \"../Components/StatisticsCounter\";\r\nimport { Dimensions } from 'react';\r\n\r\n\r\nclass LandingPageContainer extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            // user: \"alkhalifas\",\r\n            user: null,\r\n            snippets: []\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.findAllPublicSnippets()\r\n        // this.render();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // this.props.findAllPublicSnippets()\r\n        this.render();\r\n    }\r\n\r\n\r\n    render() {\r\n        function currentTime() {\r\n            let n =  new Date();\r\n            let y = n.getFullYear();\r\n            let m = n.getMonth() + 1;\r\n            let d = n.getDate();\r\n            let h = n.getHours();\r\n            let min = n.getMinutes();\r\n            let s = n.getSeconds();\r\n\r\n            return  m + \"/\" + d + \"/\" + y + \" \" + h + \":\" + min + \":\" + s;\r\n        }\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                {console.log(this.props.snippets)}\r\n                {\r\n                    this.state.user !== null &&\r\n\r\n                    <div>\r\n                        <div className=\"jumbotron text-center\" style={{height: 200}}>\r\n                            <h1 className=\"display-4\">Welcome back to CodeSaver, {this.state.user}!</h1>\r\n                        </div>\r\n                        <div>\r\n                            <h6 class=\"text-secondary\">Updated On: {currentTime()}</h6>\r\n                        </div>\r\n                        <SnippetSearchListComponent snippets={this.props.snippets}/>\r\n                    </div>\r\n                }\r\n                {\r\n                    this.state.user == null &&\r\n                        <div>\r\n                            <div className=\" text-center\">\r\n                                <h1 className=\"display-1 mt-5\">Welcome to CodeSaver</h1>\r\n                                <p className=\"lead\">\"We are on a mission to make your coding life simpler, more productive, and more efficient.\"</p>\r\n                                {/*<p className=\"lead\">*/}\r\n                                {/*    <a className=\"btn btn-primary btn-lg m-2\" href=\"#\" role=\"button\">About Us</a>*/}\r\n                                {/*    <a className=\"btn btn-primary btn-lg m-2\" href=\"#\" role=\"button\">Learn More</a>*/}\r\n                                {/*    <a className=\"btn btn-primary btn-lg m-2\" href=\"#\" role=\"button\">Join Now</a>*/}\r\n                                {/*</p>*/}\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                <img\r\n                                    className=\" col-lg-9 col-md-6 col-sm-3\"\r\n                                    src={codePic}/>\r\n                            </div>\r\n                            {/*<StatisticsCounter/>*/}\r\n                            <div>\r\n                                <h1  className=\" mt-5\"> About Us</h1>\r\n                                <p  className=\"lead \">\r\n                                    CodeSaver is an American technology company founded by three Students from Northeastern\r\n                                    University in Boston Massachusetts. CodeSaver was founded on the three principles of\r\n                                    making coding life simple, more efficient, and more productive. Our objective as a company\r\n                                    is to build a reliable, efficient, and agile platform where people can come to save, organize,\r\n                                    and share their code.\r\n                                </p>\r\n                            </div>\r\n\r\n                            <div\r\n                                className=\"text-center\"\r\n                            >\r\n                                <img\r\n                                    className=\"text-center align-content-center\"\r\n                                    src={valuesCode}/>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h1 className=\" mt-5\">How it Works</h1>\r\n                                <p  className=\"lead \">\r\n                                    CodeSaver is an American technology company founded by three Students from Northeastern\r\n                                    University in Boston Massachusetts. CodeSaver was founded on the three principles of\r\n                                    making the coding experience simple, more efficient, and more productive. Our objective as a company\r\n                                    is to build a reliable, efficient, and agile platform where people can come to save, organize,\r\n                                    and share their code.\r\n                                </p>\r\n                            </div>\r\n\r\n\r\n                            {/*<section id=\"cd-timeline\" className=\"cd-container\">*/}\r\n                            {/*    <div className=\"cd-timeline-block\">*/}\r\n                            {/*        <div className=\"cd-timeline-img cd-picture\">*/}\r\n                            {/*            <i className=\"fas fa-file-alt\"></i>*/}\r\n\r\n                            {/*        </div>*/}\r\n\r\n                            {/*        <div className=\"cd-timeline-content\">*/}\r\n                            {/*            <h2>Register For a Free Account</h2>*/}\r\n                            {/*            <p>Registering for an account is easy, and takes less than 60 seconds to complete. Please visit our privacy page for more information.</p>*/}\r\n                            {/*            <span className=\"cd-date\"><h3>Register</h3></span>*/}\r\n                            {/*            <a className=\"btn btn-primary btn-lg m-2\" href=\"#\" role=\"button\">Join Now</a>*/}\r\n                            {/*        </div>*/}\r\n                            {/*    </div>*/}\r\n\r\n                            {/*    <div className=\"cd-timeline-block\">*/}\r\n                            {/*        <div className=\"cd-timeline-img cd-picture\">*/}\r\n                            {/*            <i className=\"fas fa-file-alt\"></i>*/}\r\n\r\n                            {/*        </div>*/}\r\n\r\n                            {/*        <div className=\"cd-timeline-content\">*/}\r\n                            {/*            <h2>Create Snippet</h2>*/}\r\n                            {/*            <p>Creating snippets is easy! CodeSave currently supports a number of popular languages within our online IDE such as Python and Javascript.</p>*/}\r\n                            {/*            /!*<img src=\"../assets/media/sample_snippet.png\"></img>*!/*/}\r\n                            {/*            <img src={snippetPicture} />*/}\r\n                            {/*            /!*<img src=\"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__340.jpg\" />*!/*/}\r\n                            {/*            <span className=\"cd-date\"><h3>Create</h3></span>*/}\r\n                            {/*        </div>*/}\r\n                            {/*    </div>*/}\r\n\r\n                            {/*    <div className=\"cd-timeline-block\">*/}\r\n                            {/*        <div className=\"cd-timeline-img cd-picture\">*/}\r\n                            {/*            <i className=\"fas fa-file-alt\"></i>*/}\r\n\r\n                            {/*        </div>*/}\r\n\r\n                            {/*        <div className=\"cd-timeline-content\">*/}\r\n                            {/*            <h2>Save & Share</h2>*/}\r\n                            {/*            <p>Save your snippet for future use. You have the option of sharing your snippets publicly, or keeping them private. CodeSave is also fully integrated with GitHub allowing you to post and get Github Gists.</p>*/}\r\n                            {/*            <span className=\"cd-date\"><h3>Save</h3></span>*/}\r\n                            {/*            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\"*/}\r\n                            {/*                 fill=\"currentColor\" className=\"bi bi-github\" viewBox=\"0 0 16 16\">*/}\r\n                            {/*                <path fill-rule=\"evenodd\"*/}\r\n                            {/*                      d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z\"/>*/}\r\n                            {/*            </svg>*/}\r\n                            {/*        </div>*/}\r\n                            {/*    </div>*/}\r\n                            {/*</section>*/}\r\n\r\n\r\n                            <div\r\n                                className=\"text-center\"\r\n                            >\r\n                                <img\r\n                                    className=\"text-center align-content-center col-lg-12 col-md-6 col-sm-3\"\r\n                                    src={timeline}/>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"row text-center \">\r\n                                <p className=\" mr-2 lead\">Copyright 2020 CodeSaver Technologies LLC. All rights reserved. Privacy policies can be found</p>\r\n                                <p><Link className=\"lead\" to=\"/privacy\">here</Link></p>\r\n                                <p className=\" mr-2 lead\">. Follow us on social media </p>\r\n\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"royalblue\"\r\n                                     className=\"bi bi-facebook mr-2\" viewBox=\"0 0 16 16\">\r\n                                    <path fill-rule=\"evenodd\"\r\n                                          d=\"M16 8.049c0-4.446-3.582-8.05-8-8.05C3.58 0-.002 3.603-.002 8.05c0 4.017 2.926 7.347 6.75 7.951v-5.625h-2.03V8.05H6.75V6.275c0-2.017 1.195-3.131 3.022-3.131.876 0 1.791.157 1.791.157v1.98h-1.009c-.993 0-1.303.621-1.303 1.258v1.51h2.218l-.354 2.326H9.25V16c3.824-.604 6.75-3.934 6.75-7.951z\"/>\r\n                                </svg>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"royalblue\"\r\n                                     className=\"bi bi-linkedin\" viewBox=\"0 0 16 16\">\r\n                                    <path fill-rule=\"evenodd\"\r\n                                          d=\"M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854V1.146zm4.943 12.248V6.169H2.542v7.225h2.401zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248-.822 0-1.359.54-1.359 1.248 0 .694.521 1.248 1.327 1.248h.016zm4.908 8.212h-2.4s.03-6.547 0-7.225h2.4v1.023a5.54 5.54 0 0 0-.016.025h.016v-.025c.32-.493.89-1.193 2.165-1.193 1.58 0 2.764 1.033 2.764 3.252v4.143h-2.4V9.529c0-.972-.348-1.634-1.217-1.634-.664 0-1.059.447-1.233.878-.063.154-.079.37-.079.586v4.035z\"/>\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    snippets: state.snippetReducer.snippets\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    findAllPublicSnippets: () => findAllPublicSnippets(dispatch)\r\n})\r\n\r\nexport default connect(stateToPropertyMapper, propertyToDispatchMapper)\r\n(LandingPageContainer)\r\n\r\n","import React from \"react\";\r\n\r\n\r\nclass StatisticsCounter extends React.Component {\r\n\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className=\"counter col_fourth\">\r\n                    <i className=\"fa fa-code fa-2x\"></i>\r\n                    <h2 className=\"timer count-title count-number\" data-to=\"300\" data-speed=\"1500\"></h2>\r\n                    <p className=\"count-text \">SomeText GoesHere</p>\r\n                </div>\r\n\r\n                <div className=\"counter col_fourth\">\r\n                    <i className=\"fa fa-coffee fa-2x\"></i>\r\n                    <h2 className=\"timer count-title count-number\" data-to=\"1700\" data-speed=\"1500\"></h2>\r\n                    <p className=\"count-text \">SomeText GoesHere</p>\r\n                </div>\r\n\r\n                <div className=\"counter col_fourth\">\r\n                    <i className=\"fa fa-lightbulb-o fa-2x\"></i>\r\n                    <h2 className=\"timer count-title count-number\" data-to=\"11900\" data-speed=\"1500\"></h2>\r\n                    <p className=\"count-text \">SomeText GoesHere</p>\r\n                </div>\r\n\r\n                <div className=\"counter col_fourth end\">\r\n                    <i className=\"fa fa-bug fa-2x\"></i>\r\n                    <h2 className=\"timer count-title count-number\" data-to=\"157\" data-speed=\"1500\"></h2>\r\n                    <p className=\"count-text \">SomeText GoesHere</p>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n}\r\nexport default StatisticsCounter\r\n\r\n","import React from \"react\";\r\nimport SnippetContainer from \"./SnippetContainer\";\r\nimport {\r\n    addTagToSnippet, createLocalSnippet, createSnippet, deleteSnippet,\r\n    editLocalSnippet, editLocalText,\r\n    removeTagFromSnippet, togglePrivacy,\r\n    updateSnippet\r\n} from \"../Actions/SnippetActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {getGistById, getGistFile, getGistsForUser} from \"../Actions/GistActions\";\r\n\r\nclass ImportGistContainer extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            requested: false,\r\n            importSnippetTemplate: {\r\n                id: \"\",\r\n                gistId: \"\",\r\n                creator: \"\",\r\n                dateCreated: \"\",\r\n                lastModified: \"\",\r\n                title: \"\",\r\n                description: \"\",\r\n                codeText: \"\",\r\n                tags: [],\r\n                likes: [],\r\n                shareableURL: \"\",\r\n                publicPost: true,\r\n                recommended: false\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount() { };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) { };\r\n\r\n    importGist(gistId) {\r\n        this.props.getGistById(gistId)\r\n            .then(() => {\r\n                let files = Object.keys(this.props.gist.files)\r\n                let fileName = files[0]\r\n                let file = this.props.gist.files[fileName]\r\n                this.props.getGistFile(file.raw_url).then(() => {\r\n                    this.state.importSnippetTemplate.gistId = gistId;\r\n                    this.state.importSnippetTemplate.creator = this.props.activeUser.username;\r\n                    this.state.importSnippetTemplate.title = fileName;\r\n                    this.state.importSnippetTemplate.description = this.props.gist.description;\r\n                    this.state.importSnippetTemplate.codeText = this.props.gistContent;\r\n                    this.props.createLocalSnippet(this.state.importSnippetTemplate);\r\n                    this.setState({\r\n                        requested: true\r\n                    })\r\n                })\r\n            })\r\n\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                {\r\n                    console.log(\"Active user from import gist container\", this.props.activeUser)\r\n                }\r\n                {\r\n                    console.log(\"Current snippet from import gist container\", this.props.currentSnippet)\r\n                }\r\n                {\r\n                    (!this.state.requested) &&\r\n                        <div className=\"card col-12 mt-3\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <label className=\"col-form-label d-none\" htmlFor=\"importgistid\">\r\n                                        Import a Gist From GitHub\r\n                                    </label>\r\n                                    <div className=\"input-group col-12\">\r\n                                        <input\r\n                                            id=\"importgistid\"\r\n                                            className=\"form-control col-12\"\r\n                                            placeholder=\"Enter the ID of a GitHub Gist\"\r\n                                        />\r\n                                        <div className=\"input-group-append\">\r\n                                            <button\r\n                                                className=\"btn btn-success\"\r\n                                                type=\"button\"\r\n                                                onClick={() => this.importGist(document.getElementById(\"importgistid\").value)}>Import\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                }\r\n                {\r\n                    (this.props.currentSnippet && this.state.requested) &&\r\n                        <SnippetContainer\r\n                            snippet={this.props.currentSnippet}\r\n                            text={this.props.text}\r\n                            create={true}\r\n                            singleview={true}\r\n                            editLocalSnippet={this.props.editLocalSnippet}\r\n                            editLocalText={this.props.editLocalText}\r\n                            updateSnippet={this.props.updateSnippet}\r\n                            addTagToSnippet={this.props.addTagToSnippet}\r\n                            removeTagFromSnippet={this.props.removeTagFromSnippet}\r\n                            togglePrivacy={this.props.togglePrivacy}\r\n                            deleteSnippet={this.props.deleteSnippet}\r\n                            createSnippet={this.props.createSnippet}\r\n                            activeUser={this.props.activeUser}\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    currentSnippet: state.snippetReducer.snippets[0],\r\n    text: state.snippetReducer.text,\r\n    gist: state.gistReducer.gist,\r\n    gistContent: state.gistReducer.file,\r\n    gists: state.gistReducer.gists,\r\n    activeUser: state.userReducer.activeUser\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    createSnippet: (snippet, text) => createSnippet(dispatch, snippet, text),\r\n    createLocalSnippet: (snippet) => createLocalSnippet(dispatch, snippet),\r\n    editLocalSnippet: (snippet) => editLocalSnippet(dispatch, snippet),\r\n    editLocalText: (text) => editLocalText(dispatch, text),\r\n    updateSnippet: (snippet) => updateSnippet(dispatch, snippet),\r\n    addTagToSnippet: (tag) => addTagToSnippet(dispatch, tag),\r\n    removeTagFromSnippet: (tag) => removeTagFromSnippet(dispatch, tag),\r\n    togglePrivacy: (snippet) => togglePrivacy(dispatch, snippet),\r\n    deleteSnippet: (snippetId) => deleteSnippet(dispatch, snippetId),\r\n    getGistById: (gistId) => getGistById(dispatch, gistId),\r\n    getGistFile: (fileUrl) => getGistFile(dispatch, fileUrl)\r\n})\r\n\r\n\r\nexport default connect\r\n(stateToPropertyMapper, propertyToDispatchMapper)\r\n(ImportGistContainer)\r\n","import React from \"react\";\r\nimport { findRecommendedSnippets } from \"../Actions/SnippetActions\";\r\nimport {connect} from \"react-redux\";\r\nimport SnippetSearchListComponent from \"../Components/Search/SnippetSearchListComponent\";\r\nimport {fireUID} from \"../config/db\";\r\n\r\nclass RecommendedSnippetContainer extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { };\r\n    }\r\n\r\n    async loadingWrapper() {\r\n        await this.props.findRecommendedSnippets()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadingWrapper().then(() => this.render()\r\n        )\r\n    }\r\n    render () {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.props.snippets &&\r\n                        <SnippetSearchListComponent\r\n                            snippets={this.props.snippets}\r\n                        />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    snippets: state.snippetReducer.snippets\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    findRecommendedSnippets: () => findRecommendedSnippets(dispatch)\r\n\r\n})\r\n\r\n\r\nexport default connect\r\n(stateToPropertyMapper, propertyToDispatchMapper)\r\n(RecommendedSnippetContainer)\r\n","\r\n\r\nconst PrivacyPolicyComponent = () =>\r\n\r\n    <div>\r\n        <h2 className=\"m-3\">Privacy Policy of CodeSaver</h2>\r\n\r\n        <div className=\"bg-light p-3\">\r\n\r\n            <h3>Data Collected</h3>\r\n\r\n            <p>We collect information you provide directly to us. For example, we collect information when you create an\r\n                account, subscribe, participate in any interactive features of our services, fill out a form, request\r\n                customer support or otherwise communicate with us. The types of information we may collect include your\r\n                name, email address, code, credit card information and other contact or identifying information\r\n                you choose to provide.</p>\r\n\r\n            <p>We collect anonymous data from every visitor of the Website to monitor traffic and fix bugs. For example, we\r\n                collect information like web requests, the data sent in response to such requests, the Internet Protocol\r\n                address, the browser type, the browser language, and a timestamp for the request.</p>\r\n\r\n            <p>We also use various technologies to collect information, and this may include sending cookies to your\r\n                computer. Cookies are small data files stored on your hard drive or in your device memory that helps us to\r\n                improve our services and your experience, see which areas and features of our services are popular and count\r\n                visits. We may also collect information using web beacons (also known as \"tracking pixels\"). Web beacons are\r\n                electronic images that may be used in our services or emails and to track count visits or understand usage\r\n                and campaign effectiveness. Our Privacy Policy was created with the help of the <a\r\n                    href=\"https://www.privacy-policy-template.com\">Privacy Policy Template</a> and the <a\r\n                    href=\"https://www.generateprivacypolicy.com\">Generate Privacy Policy Generator</a>.</p>\r\n\r\n            <h3>Use of the Data</h3>\r\n\r\n            <p>We only use your personal information to provide you the <span className=\"website_name\">Blah</span> services\r\n                or to communicate with you about the Website or the services.</p>\r\n\r\n            <p>We employ industry standard techniques to protect against unauthorized access of data about you that we\r\n                store, including personal information.</p>\r\n\r\n            <p>We do not share personal information you have provided to us without your consent, unless:</p>\r\n\r\n            <ul>\r\n                <li>Doing so is appropriate to carry out your own request</li>\r\n                <li>We believe it's needed to enforce our legal agreements or that is legally required</li>\r\n                <li>We believe it's needed to detect, prevent or address fraud, security or technical issues</li>\r\n            </ul>\r\n\r\n            <h3>Sharing of Data</h3>\r\n\r\n            <p>We don't share your personal information with third parties. Aggregated, anonymized data is periodically\r\n                transmitted to external services to help us improve the Website and service.</p>\r\n\r\n            <p>We may allow third parties to provide analytics services. These third parties may use cookies, web beacons\r\n                and other technologies to collect information about your use of the services and other websites, including\r\n                your IP address, web browser, pages viewed, time spent on pages, links clicked and conversion\r\n                information.</p>\r\n\r\n            {/*<p>We also use social buttons provided by services like Twitter, Google+, LinkedIn and Facebook. Your use of*/}\r\n            {/*    these third party services is entirely optional. We are not responsible for the privacy policies and/or*/}\r\n            {/*    practices of these third party services, and you are responsible for reading and understanding those third*/}\r\n            {/*    party services' privacy policies.</p>*/}\r\n\r\n            <h3>Cookies</h3>\r\n\r\n            <p>We may use cookies on our site to remember your preferences.</p>\r\n\r\n            <p>For more general information on cookies, please read <a\r\n                href=\"https://www.cookieconsent.com/what-are-cookies/\">\"What Are Cookies\"</a>.</p>\r\n\r\n            <h3>Opt-Out, Communication Preferences</h3>\r\n\r\n            <p>You may modify your communication preferences and/or opt-out from specific communications at any time. Please\r\n                specify and adjust your preferences.</p>\r\n\r\n            <h3>Security</h3>\r\n\r\n            <p>We take reasonable steps to protect personally identifiable information from loss, misuse, and unauthorized\r\n                access, disclosure, alteration, or destruction. But, you should keep in mind that no Internet transmission\r\n                is ever completely secure or error-free. In particular, email sent to or from the Sites may not be\r\n                secure.</p>\r\n\r\n            <h3>About Children</h3>\r\n\r\n            <p>The Website is not intended for children under the age of 13. We do not knowingly collect personally\r\n                identifiable information via the Website from visitors in this age group.</p>\r\n\r\n            <h3>Changes to the Privacy Policy</h3>\r\n\r\n            <p>We may amend this Privacy Policy from time to time. Use of information we collect now is subject to the\r\n                Privacy Policy in effect at the time such information is used.</p>\r\n\r\n            <p>If we make major changes in the way we collect or use information, we will notify you by posting an\r\n                announcement on the Website or sending you an email.</p>\r\n        </div>;\r\n    </div>\r\n\r\n\r\n\r\nexport default PrivacyPolicyComponent\r\n","export default __webpack_public_path__ + \"static/media/people_computer_small.411eb33b.jpg\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport fire from \"../../config/db\";\r\nimport registerPic from \"../../assets/media/people_computer_small.jpg\"\r\n\r\nclass UserRegisterComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.login = this.login.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.signup = this.signup.bind(this);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            paToken: '',\r\n            type: ''\r\n        };\r\n    }\r\n\r\n    logout(e) {\r\n        e.preventDefault();\r\n        fire.auth().signOut().then(() => alert(\"You've been logged out\"));\r\n    }\r\n\r\n    login(e) {\r\n        e.preventDefault();\r\n        fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((u)=>{alert(\"You've been signed in\")\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    signup(e){\r\n        e.preventDefault();\r\n        fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n            .then((u)=>{\r\n                fire.database().ref('users/' + fire.auth().currentUser.uid).set({\r\n                    username: this.state.name,\r\n                    uid: fire.auth().currentUser.uid,\r\n                    email: this.state.email,\r\n                    paToken: this.state.paToken,\r\n                    type: this.state.type,\r\n                    locked: false\r\n                });\r\n\r\n            })\r\n            .then(() => {alert(\"User created\")})\r\n            .catch((error) => {\r\n                alert(error);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                        <img\r\n                            style={{height: 300}}\r\n                            src={registerPic}/>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h2 className=\"m-3\">Register a new account!</h2>\r\n\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"name\">Username</label>\r\n                                <input value={this.state.name} onChange={this.handleChange} name=\"name\"\r\n                                       className=\"form-control\" id=\"name\"\r\n                                       placeholder=\"Enter Username\"/>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                                <input value={this.state.email} onChange={this.handleChange} type=\"email\" name=\"email\"\r\n                                       className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\r\n                                       placeholder=\"Enter Email\"/>\r\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with\r\n                                    anyone else.</small>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                                <input value={this.state.password} onChange={this.handleChange} type=\"password\"\r\n                                       name=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"\r\n                                       placeholder=\"Password\"/>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"paToken\">Personal Access Token</label>\r\n                                <input value={this.state.paToken} onChange={this.handleChange} type=\"password\"\r\n                                       name=\"paToken\"\r\n                                       className=\"form-control\" id=\"paToken\" placeholder=\"Personal Access Token\"/>\r\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">You can find your PA Token in your GitHub account.</small>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"type\">Type</label>\r\n                                <input\r\n                                    value={this.state.type}\r\n                                    onChange={this.handleChange}\r\n                                    name=\"type\"\r\n                                    className=\"form-control\"\r\n                                    id=\"type\"\r\n                                    placeholder=\"USER, ADMIN, MOD\"/>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <button\r\n                                    onClick={this.signup}\r\n                                    // style={{marginLeft: '25px'}}\r\n                                    className=\"btn btn-primary col-md-5 col-12 mr-2 ml-3\">\r\n                                    Register\r\n                                </button>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    onClick={this.login}\r\n                                    className=\"btn btn-outline-primary col-md-5 col-12\">\r\n                                    Login\r\n                                </button>\r\n                            </div>\r\n\r\n                            {/*<button type=\"submit\" onClick={this.logout} className=\"btn btn-secondary\">Logout</button>*/}\r\n\r\n\r\n                        </form>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\nexport default UserRegisterComponent;\r\n","export default __webpack_public_path__ + \"static/media/people_computer_2_small.6c3c2ea5.PNG\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport fire from \"../../config/db\";\r\nimport loginPic from \"../../assets/media/people_computer_2_small.PNG\"\r\nimport \"./LoginComponent.css\"\r\n\r\nclass UserLoginComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.login = this.login.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.signup = this.signup.bind(this);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            paToken: '',\r\n            type: ''\r\n        };\r\n    }\r\n\r\n    logout(e) {\r\n        e.preventDefault();\r\n        fire.auth().signOut().then(() => alert(\"You've been logged out\"));\r\n    }\r\n\r\n    login(e) {\r\n        e.preventDefault();\r\n        fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((u)=>{alert(\"You've been signed in\")\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    signup(e){\r\n        e.preventDefault();\r\n        fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n            .then((u)=>{\r\n                fire.database().ref('users/' + fire.auth().currentUser.uid).set({\r\n                    username: this.state.name,\r\n                    uid: fire.auth().currentUser.uid,\r\n                    email: this.state.email,\r\n                    paToken: this.state.paToken,\r\n                    type: this.state.type,\r\n                    locked: false\r\n                });\r\n\r\n            })\r\n            .then(() => {alert(\"User created\")})\r\n            .catch((error) => {\r\n                alert(error);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <h2 className=\"m-3\">Login</h2>\r\n\r\n                        <form>\r\n                            {/*<div className=\"form-group\">*/}\r\n                            {/*    <label htmlFor=\"name\">Username</label>*/}\r\n                            {/*    <input value={this.state.name} onChange={this.handleChange} name=\"name\"*/}\r\n                            {/*           className=\"form-control\" id=\"name\"*/}\r\n                            {/*           placeholder=\"Enter Username\"/>*/}\r\n                            {/*</div>*/}\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                                <input value={this.state.email} onChange={this.handleChange} type=\"email\" name=\"email\"\r\n                                       className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\r\n                                       placeholder=\"Enter Email\"/>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                                <input value={this.state.password} onChange={this.handleChange} type=\"password\"\r\n                                       name=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"\r\n                                       placeholder=\"Password\"/>\r\n                            </div>\r\n\r\n                            {/*<div className=\"form-group\">*/}\r\n                            {/*    <label htmlFor=\"paToken\">Personal Access Token</label>*/}\r\n                            {/*    <input value={this.state.paToken} onChange={this.handleChange} type=\"password\"*/}\r\n                            {/*           name=\"paToken\"*/}\r\n                            {/*           className=\"form-control\" id=\"paToken\" placeholder=\"Personal Access Token\"/>*/}\r\n                            {/*    <small id=\"emailHelp\" className=\"form-text text-muted\">You can find your PA Token in your GitHub account.</small>*/}\r\n                            {/*</div>*/}\r\n\r\n                            {/*<div className=\"form-group\">*/}\r\n                            {/*    <label htmlFor=\"type\">Type</label>*/}\r\n                            {/*    <input*/}\r\n                            {/*        value={this.state.type}*/}\r\n                            {/*        onChange={this.handleChange}*/}\r\n                            {/*        name=\"type\"*/}\r\n                            {/*        className=\"form-control\"*/}\r\n                            {/*        id=\"type\"*/}\r\n                            {/*        placeholder=\"USER, ADMIN, MOD\"/>*/}\r\n                            {/*</div>*/}\r\n\r\n                            <div className=\"row\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    onClick={this.login}\r\n                                    className=\"btn btn-primary col-md-5 col-12 mr-2 ml-3\">\r\n                                    Login\r\n                                </button>\r\n\r\n                                <button\r\n                                    onClick={this.signup}\r\n                                    // style={{marginLeft: '25px'}}\r\n                                    className=\"btn col-md-5 col-12 mr-2 btn-outline-primary\">\r\n                                    Register\r\n                                </button>\r\n\r\n                            </div>\r\n                            <div>\r\n                                <hr\r\n                                    className=\"m-3 mt-5 mb-3\"\r\n                                />\r\n                                <p className=\"text-center\"> Coming Soon:</p>\r\n\r\n                                <div className=\"col-12\">\r\n                                    <a href=\"#\" className=\"fb btn\">\r\n                                        <i className=\"fa fa-facebook fa-fw\"></i> Login with Facebook\r\n                                    </a>\r\n                                    <a href=\"#\" className=\"twitter btn\">\r\n                                        <i className=\"fa fa-twitter fa-fw\"></i> Login with Twitter\r\n                                    </a>\r\n                                    <a href=\"#\" className=\"google btn\"><i className=\"fa fa-google fa-fw\">\r\n                                    </i> Login with Google+\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                        </form>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                        <img\r\n                            style={{height: 500}}\r\n                            src={loginPic}/>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\nexport default UserLoginComponent;\r\n","import React from \"react\";\r\nimport { findFavoriteSnippets } from \"../Actions/SnippetActions\";\r\nimport {connect} from \"react-redux\";\r\nimport SnippetSearchListComponent from \"../Components/Search/SnippetSearchListComponent\";\r\n\r\nclass FavoriteSnippetsContainer extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.findFavoriteSnippets(this.props.activeUser.username)\r\n    };\r\n\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.props.snippets &&\r\n                        <div>\r\n                            <h2 className=\"mt-2\">Bookmarked Snippets:</h2>\r\n                            <SnippetSearchListComponent\r\n                                snippets={this.props.snippets}\r\n                            />\r\n                        </div>\r\n\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    snippets: state.snippetReducer.snippets,\r\n    activeUser: state.userReducer.activeUser\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    findFavoriteSnippets: (username) => findFavoriteSnippets(dispatch, username)\r\n\r\n})\r\n\r\n\r\nexport default connect\r\n(stateToPropertyMapper, propertyToDispatchMapper)\r\n(FavoriteSnippetsContainer)\r\n","import React, {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport fire from \"../../config/db\";\r\nimport {findAllPublicSnippets} from \"../../Actions/SnippetActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUser} from \"../../Actions/UserActions\";\r\n\r\nconst UserProfileDisplayComponent = ({user}) => {\r\n    return (\r\n        <div className={\"jumbotron\"}>\r\n                <span>\r\n                    <i className=\"fa fa-user fa-lg fa-5x\" aria-hidden=\"true\" style={{padding: 10}}/>\r\n                    <h4>{user.username}</h4>\r\n                    <h4>{user.email}</h4>\r\n                    <h4>{user.type}</h4>\r\n                </span>\r\n\r\n        </div>)\r\n}\r\nexport default UserProfileDisplayComponent\r\n","import React, {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport fire, {fireUID, fireUser} from \"../config/db\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuth, getUser, getUserByUID} from \"../Actions/UserActions\";\r\nimport UserProfileEditComponent from \"../Components/Users/UserProfileEditComponent\";\r\nimport UserProfileDisplayComponent from \"../Components/Users/UserProfileDisplayComponent\";\r\n\r\nclass UserProfileEditContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            user: {username: \"user123\", paToken: \"Personal Access Token\", email: \"email@google.com\", type: \"USER\"},\r\n        }\r\n    }\r\n\r\n    async loadingWrapper(){\r\n        await this.props.getUserByUID(fireUID)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadingWrapper().then(() => this.render())\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <UserProfileEditComponent user={this.props.user !== null ? this.props.user : this.state.user}/>\r\n            </div>)\r\n    }\r\n}\r\n\r\nconst\r\n    stateToPropertyMapper = (state) => ({\r\n        activeUser: state.userReducer.activeUser,\r\n        user: state.userReducer.activeUser\r\n    })\r\n\r\nconst\r\n    propertyToDispatchMapper = (dispatch) => ({\r\n        getUser: (username) => getUser(dispatch, username),\r\n        getUserByUID: (uid) => getUserByUID(dispatch, uid),\r\n        getAuth: () => getAuth(dispatch)\r\n    })\r\n\r\nexport default connect(stateToPropertyMapper, propertyToDispatchMapper)\r\n\r\n(\r\n    UserProfileEditContainer\r\n)\r\n\r\n\r\n\r\n","import React, {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport fire, {fireUID, fireUser} from \"../config/db\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuth, getUser, getUserByUID} from \"../Actions/UserActions\";\r\nimport UserProfileEditComponent from \"../Components/Users/UserProfileEditComponent\";\r\nimport UserProfileDisplayComponent from \"../Components/Users/UserProfileDisplayComponent\";\r\n\r\nclass UserProfileDisplayContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n    }\r\n\r\n    async loadingWrapper(){\r\n        const username = this.props.match.params.username\r\n        this.props.getUser(username)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadingWrapper().then(() => console.log(this.props.user), this.render())\r\n        this.render()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.render()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {console.log(\"render\", this.props.user)}\r\n                <UserProfileDisplayComponent user={this.props.displayedUser}/>\r\n            </div>)\r\n    }\r\n}\r\n\r\nconst\r\n    stateToPropertyMapper = (state) => ({\r\n        displayedUser: state.userReducer.displayedUser,\r\n        // userUID: state.authReducer.userUID,\r\n\r\n        user: state.userReducer.user\r\n    })\r\n\r\nconst\r\n    propertyToDispatchMapper = (dispatch) => ({\r\n        getUser: (username) => getUser(dispatch, username),\r\n        getUserByUID: (uid) => getUserByUID(dispatch, uid),\r\n        getAuth: () => getAuth(dispatch)\r\n\r\n    })\r\n\r\nexport default connect(stateToPropertyMapper, propertyToDispatchMapper)\r\n\r\n(\r\n    UserProfileDisplayContainer\r\n)\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter, Link, Route} from 'react-router-dom'\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport './styles/index.css';\r\nimport './styles/style.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport gistReducer from \"./Reducers/GistReducer\";\r\nimport snippetReducer from \"./Reducers/snippetReducer\";\r\nimport {Provider} from \"react-redux\"\r\nimport NavBarContainer from \"./Containers/NavbarContainer\";\r\nimport TestSnippetDisplayPageContainer from \"./Containers/TestSnippetDisplayPageContainer\"\r\nimport SnippetContainer from \"./Containers/SnippetContainer\";\r\nimport SnippetSearchContainer from \"./Containers/SnippetSearchContainer\";\r\nimport UserSnippetsContainer from \"./Containers/UserSnippetsContainer\";\r\nimport MySnippetsContainer from \"./Containers/MySnippetsContainer\";\r\nimport GistReducer from \"./Reducers/GistReducer\";\r\nimport UserReducer from \"./Reducers/UserReducer\";\r\nimport SingleSnippetContainer from \"./Containers/EditSnippetContainer\";\r\nimport CreateSnippetContainer from \"./Containers/CreateSnippetContainer\";\r\nimport UserAdminListComponent from \"./Components/Users/UserAdminListComponent\";\r\nimport LoginComponent from \"./Components/LoginComponent\";\r\nimport LandingPageContainer from \"./Containers/LandingPageContainer\";\r\nimport ImportGistContainer from \"./Containers/ImportGistContainer\";\r\nimport RecommendedSnippetContainer from \"./Containers/RecommendedSnippetContainer\";\r\nimport PrivacyPolicyComponent from \"./Components/PrivacyPolicyComponent\";\r\nimport UserRegisterComponent from \"./Components/Users/UserRegisterComponent\";\r\nimport UserLoginComponent from \"./Components/Users/UserLoginComponent\";\r\nimport FavoriteSnippetsContainer from \"./Containers/FavoriteSnippetsContainer\";\r\nimport UserProfileEditComponent from \"./Components/Users/UserProfileEditComponent\";\r\nimport UserProfileEditContainer from \"./Containers/UserProfileEditContainer\";\r\nimport UserProfileDisplayContainer from \"./Containers/UserProfileDisplayContainer\";\r\n\r\nconst reducers = combineReducers({\r\n    gistReducer: GistReducer,\r\n    snippetReducer,\r\n    userReducer: UserReducer\r\n})\r\n\r\nconst store = createStore(reducers)\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <div className=\"\">\r\n                <NavBarContainer/>\r\n                <div className=\"container\">\r\n                    <Route path=\"/\" exact>\r\n                        <LandingPageContainer/>\r\n                    </Route>\r\n                    <Route path={[\r\n                        '/search',\r\n                        '/search/:terms'\r\n                    ]}\r\n                    exact\r\n                    component={SnippetSearchContainer}\r\n                    />\r\n                     <Route path=\"/mysnippets\" exact component={MySnippetsContainer}/>\r\n\r\n                    <Route path=\"/admin\" exact>\r\n                        <UserAdminListComponent/>\r\n                    </Route>\r\n                    <Route path={[\"/profile/:username\"]} exact component={UserProfileDisplayContainer}/>\r\n                    <Route path={\"/profile\"} exact component={UserProfileEditContainer}/>\r\n\r\n                    {/*<Route path=\"/concept_proof\" exact>*/}\r\n                    {/*    <TestSnippetDisplayPageContainer username=\"NameOfUser\"/>*/}\r\n                    {/*</Route>*/}\r\n                    <Route path=\"/snippet/:snippetId\" exact component={SingleSnippetContainer}/>\r\n                    <Route path=\"/newsnippet\" exact component={CreateSnippetContainer}/>\r\n                    <Route path=\"/import_gist\" exact component={ImportGistContainer}/>\r\n                    <Route path=\"/recommended\" exact component={RecommendedSnippetContainer}/>\r\n                    <Route path=\"/favorites\" exact component={FavoriteSnippetsContainer}/>\r\n                    <Route path=\"/login\" exact component={LoginComponent}/>\r\n                    <Route path=\"/login2\" exact component={UserLoginComponent}/>\r\n                    <Route path=\"/privacy\" exact component={PrivacyPolicyComponent}/>\r\n                    <Route path=\"/register\" exact component={UserRegisterComponent}/>\r\n                {/*End of container*/}\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}